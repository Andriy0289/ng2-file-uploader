{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///./index.ts","webpack:///./module/directives/fileDrop.directive.ts","webpack:///./module/directives/fileSelect.directive.ts","webpack:///./module/directives/imgPreview.directive.ts","webpack:///./module/directives/progressBar.directive.ts","webpack:///./module/index.ts","webpack:///./module/module.ts","webpack:///./module/pipe/fileSizePipe.pipe.ts","webpack:///./module/source/fileFilter.core.ts","webpack:///./module/source/fileManager.core.ts","webpack:///./module/source/fileUploader.core.ts","webpack:///./module/source/index.ts","webpack:///./module/source/protocol.core.ts","webpack:///./module/source/transfer.core.ts","webpack:///./module/source/uploaderHook.core.ts","webpack:///./module/source/utils.core.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;;;;;;;;;;;;;;;ACVA,mEAAyB;;;;;;;;;;;;;;;;;;;;;;;;;ACAzB,iCAAiC;AACjC,sCAAsC;AACtC,+FAA8H;AAC9H,sHAAyD;AACzD,6GAAmD;AAGnD,EAAE;AACF,oEAAoE;AACpE,EAAE;AAMF,IAAa,iBAAiB;IAkB1B,EAAE;IACF,6EAA6E;IAC7E,EAAE;IACF,2BAA2B,OAAmB,EAAU,QAAkB;QAA/C,YAAO,GAAP,OAAO,CAAY;QAAU,aAAQ,GAAR,QAAQ,CAAU;QAnBnE,mBAAc,GAAsB,IAAI,mBAAY,EAAO,CAAC;QAE5D,iBAAY,GAAsB,IAAI,mBAAY,EAAO,CAAC;QAE1D,iBAAY,GAAgC,IAAI,mBAAY,EAAiB,CAAC;QAE9E,iBAAY,GAAwB,IAAI,mBAAY,EAAS,CAAC;QAO7D,eAAU,GAAQ,IAAI,CAAC;IAM+C,CAAC;IAE/E,EAAE;IACF,iBAAiB;IACjB,EAAE;IACK,oCAAQ,GAAf;QACI,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;IACjF,CAAC;IAEM,uCAAW,GAAlB;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACzB,GAAG,CAAC,CAAc,UAAW,EAAX,SAAI,CAAC,MAAM,EAAX,cAAW,EAAX,IAAW;gBAAxB,IAAI,KAAK;gBACV,EAAE,CAAC,CAAC,KAAK,YAAY,8BAAW,CAAC,CAAC,CAAC;oBAC/B,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;wBACtB,KAAK,CAAC,MAAM,EAAE,CAAC;wBACf,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;oBACpC,CAAC;gBACL,CAAC;aACJ;QACL,CAAC;IACL,CAAC;IAED,EAAE;IACF,mDAAmD;IACnD,EAAE;IAEK,sCAAU,GAAjB,UAAkB,KAAY;QAE1B,0DAA0D;QAC1D,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,KAAK,IAAI,CAAC,CAAC,CAAC;YAC3B,iEAAiE;YACjE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;YACpD,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC3B,MAAM,CAAC;YACX,CAAC;YACD,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,YAAY,EAAE,IAAI,CAAC,CAAC;YAC9E,IAAI,cAAc,GAAG,UAAU,CAAC;YAChC,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,eAAe,EAAE,cAAc,CAAC,CAAC;YAE/F,sBAAsB;YACtB,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAC/B,CAAC;QAED,kBAAkB;QAClB,IAAI,CAAC,8BAA8B,CAAC,KAAK,CAAC,CAAC;IAC/C,CAAC;IAED,EAAE;IACF,oDAAoD;IACpD,EAAE;IAEK,uCAAW,GAAlB,UAAmB,KAAY;QAE3B,gCAAgC;QAChC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,KAAK,IAAI,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC;YAC/E,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,eAAe,EAAE,EAAE,CAAC,CAAC;YAEnF,yBAAyB;YACzB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,EAAE,CAAC,CAAC,KAAK,CAAC,aAAa,KAAM,IAAY,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnD,MAAM,CAAC;YACX,CAAC;YAED,sBAAsB;YACtB,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;QAC7B,CAAC;QAED,wBAAwB;QACxB,IAAI,CAAC,8BAA8B,CAAC,KAAK,CAAC,CAAC;IAC/C,CAAC;IAED,EAAE;IACF,8CAA8C;IAC9C,EAAE;IAEK,kCAAM,GAAb,UAAc,KAAY;QAEtB,gCAAgC;QAChC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,KAAK,IAAI,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC;YAC/E,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,eAAe,EAAE,EAAE,CAAC,CAAC;YAEnF,sBAAsB;YACtB,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;YAEzB,kBAAkB;YAClB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;YAEpD,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;gBACrC,IAAI,CAAC,UAAU,GAAI,IAAI,CAAC;gBACxB,MAAM,CAAC;YACX,CAAC;YAED,IAAI,SAAS,GAAa,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;YAEhD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACxC,MAAM,CAAC;YACX,CAAC;YAED,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;YAEzB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAEpC,yBAAyB;YACzB,IAAI,CAAC,UAAU,GAAI,IAAI,CAAC;QAC5B,CAAC;QAED,wBAAwB;QACxB,IAAI,CAAC,8BAA8B,CAAC,KAAK,CAAC,CAAC;IAC/C,CAAC;IAED,EAAE;IACF,yCAAyC;IACzC,EAAE;IACM,0DAA8B,GAAtC,UAAuC,KAAY;QAC/C,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,KAAK,CAAC,eAAe,EAAE,CAAC;IAC5B,CAAC;IAEO,oCAAQ,GAAhB,UAAiB,MAAgB;QAC7B,IAAI,QAAqB,CAAC;QAC1B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACrC,IAAI,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC;gBACD,QAAQ,GAAG,IAAI,8BAAW,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YACtE,CAAC;YAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACT,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC;oBACnB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC9B,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC9B,CAAC;gBACD,MAAM,IAAI,KAAK,CAAC,0BAA0B,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC;YAC5D,CAAC;YAED,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACrD,CAAC;IACL,CAAC;IAED,EAAE;IACF,8CAA8C;IAC9C,EAAE;IACM,iDAAqB,GAA7B,UAA8B,KAAkB;QAC5C,MAAM,CAAC,KAAK,CAAC,YAAY,GAAG,KAAK,CAAC,YAAY,GAAG,KAAK,CAAC,aAAa,CAAC,YAAY,CAAC;IACtF,CAAC;IAEO,oCAAQ,GAAhB,UAAiB,KAAU;QACvB,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACT,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;QAED,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;YAChB,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;QACzC,CAAC;QAED,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;YACjB,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QACnC,CAAC;QAED,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IACL,wBAAC;AAAD,CAAC;AArLG;IADC,aAAM,EAAE;8BACc,mBAAY;yDAAgC;AAEnE;IADC,aAAM,EAAE;8BACY,mBAAY;uDAAgC;AAEjE;IADC,aAAM,EAAE;8BACY,mBAAY;uDAAoD;AAErF;IADC,aAAM,EAAE;8BACY,mBAAY;uDAAoC;AAGrE;IADC,YAAK,EAAE;;sDAC+B;AAEvC;IADC,YAAK,EAAE;8BACS,wBAAQ;mDAAC;AAmC1B;IADC,mBAAY,CAAC,UAAU,EAAE,CAAC,QAAQ,CAAC,CAAC;;qCACZ,KAAK;;mDAmB7B;AAMD;IADC,mBAAY,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,CAAC;;qCACZ,KAAK;;oDAmB9B;AAMD;IADC,mBAAY,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,CAAC;;qCACZ,KAAK;;+CAkCzB;AApIQ,iBAAiB;IAL7B,gBAAS,CAAC;QACP,sCAAsC;QACtC,8CAA8C;QAC9C,QAAQ,EAAE,gBAAgB;KAC7B,CAAC;qCAsBsC,iBAAU,EAAoB,eAAQ;GArBjE,iBAAiB,CAuL7B;AAvLY,8CAAiB;;;;;;;;;;;;;;;;;;;;;;;;;ACf9B,iCAAiC;AACjC,sCAAsC;AACtC,+FAAqH;AACrH,sHAAyD;AACzD,yHAA2D;AAG3D,EAAE;AACF,mDAAmD;AACnD,EAAE;AAMF,IAAa,mBAAmB;IAqB5B,EAAE;IACF,6EAA6E;IAC7E,EAAE;IACF;QAvB0B,SAAI,GAAG,OAAO,CAAC;QACf,SAAI,GAAG,MAAM,CAAC;QAGjC,mBAAc,GAAsB,IAAI,mBAAY,EAAO,CAAC;QAE5D,iBAAY,GAAsB,IAAI,mBAAY,EAAO,CAAC;QAE1D,iBAAY,GAAgC,IAAI,mBAAY,EAAiB,CAAC;QAE9E,iBAAY,GAAwB,IAAI,mBAAY,EAAS,CAAC;QAO7D,eAAU,GAAQ,IAAI,CAAC;IAMR,CAAC;IAExB,EAAE;IACF,iBAAiB;IACjB,EAAE;IACK,sCAAQ,GAAf;QACI,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IACrB,CAAC;IAEM,yCAAW,GAAlB;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACzB,GAAG,CAAC,CAAc,UAAW,EAAX,SAAI,CAAC,MAAM,EAAX,cAAW,EAAX,IAAW;gBAAxB,IAAI,KAAK;gBACV,EAAE,CAAC,CAAC,KAAK,YAAY,8BAAW,CAAC,CAAC,CAAC;oBAC/B,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;wBACtB,KAAK,CAAC,MAAM,EAAE,CAAC;wBACf,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;oBACpC,CAAC;gBACL,CAAC;aACJ;QACL,CAAC;IACL,CAAC;IAED,EAAE;IACF,sCAAsC;IACtC,EAAE;IAEK,sCAAQ,GAAf,UAAgB,KAAY;QACxB,kBAAkB;QAClB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;QAE7C,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YACrC,IAAI,CAAC,UAAU,GAAI,IAAI,CAAC;YACxB,MAAM,CAAC;QACX,CAAC;QAED,IAAI,SAAS,GAAa,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;QAEhD,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;QACnC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QAEzB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAEpC,yBAAyB;QACzB,IAAI,CAAC,UAAU,GAAI,IAAI,CAAC;QAExB,wBAAwB;QACxB,IAAI,CAAC,8BAA8B,CAAC,KAAK,CAAC,CAAC;IAC/C,CAAC;IAED,EAAE;IACF,yCAAyC;IACzC,EAAE;IACM,4DAA8B,GAAtC,UAAuC,KAAY;QAC/C,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,KAAK,CAAC,eAAe,EAAE,CAAC;IAC5B,CAAC;IAEO,sCAAQ,GAAhB,UAAiB,MAAgB;QAC7B,IAAI,QAAqB,CAAC;QAC1B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACrC,IAAI,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC;gBACD,QAAQ,GAAG,IAAI,8BAAW,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YACtE,CAAC;YAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACT,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC;oBACnB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC9B,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC9B,CAAC;gBACD,MAAM,IAAI,KAAK,CAAC,0BAA0B,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC;YAC5D,CAAC;YAED,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACrD,CAAC;IACL,CAAC;IAED,EAAE;IACF,8CAA8C;IAC9C,EAAE;IACM,4CAAc,GAAtB,UAAuB,KAAkB;QACrC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC;IACxB,CAAC;IACL,0BAAC;AAAD,CAAC;AAzG6B;IAAzB,kBAAW,CAAC,WAAW,CAAC;;iDAAgB;AACf;IAAzB,kBAAW,CAAC,WAAW,CAAC;;iDAAe;AAGxC;IADC,aAAM,EAAE;8BACc,mBAAY;2DAAgC;AAEnE;IADC,aAAM,EAAE;8BACY,mBAAY;yDAAgC;AAEjE;IADC,aAAM,EAAE;8BACY,mBAAY;yDAAoD;AAErF;IADC,aAAM,EAAE;8BACY,mBAAY;yDAAoC;AAGrE;IADC,YAAK,EAAE;;wDAC+B;AAEvC;IADC,YAAK,EAAE;8BACS,gCAAY;qDAAC;AAkC9B;IADC,mBAAY,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,CAAC;;qCACZ,KAAK;;mDAqB3B;AAvEQ,mBAAmB;IAL/B,gBAAS,CAAC;QACP,sCAAsC;QACtC,8CAA8C;QAC9C,QAAQ,EAAE,kBAAkB;KAC/B,CAAC;;GACW,mBAAmB,CA0G/B;AA1GY,kDAAmB;;;;;;;;;;;;;;;;;;;;;;;;;ACfhC,+FAAwE;AAGpE,kCAAU,CACI;AAElB,8CAA8C;AAE9C,IAAa,qBAAqB;IAI9B,+BAAoB,EAAc;QAAd,OAAE,GAAF,EAAE,CAAY;IAAI,CAAC;IAEvC,2CAAW,GAAX;QACI,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAC9B,IAAI,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QAEjB,2CAA2C;QAC3C,EAAE,CAAC,aAAa,CAAC,GAAG,GAAG,0HAA0H,CAAC;QAElJ,MAAM,CAAC,SAAS,GAAG;YACf,EAAE,CAAC,aAAa,CAAC,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC;QACzC,CAAC,CAAC;QAEF,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACb,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACpD,CAAC;IACL,CAAC;IACL,4BAAC;AAAD,CAAC;AAnBY;IAAR,YAAK,EAAE;;oDAAY;AAFX,qBAAqB;IADjC,gBAAS,CAAC,EAAE,QAAQ,EAAE,iBAAiB,EAAE,CAAC;qCAKf,iBAAU;GAJzB,qBAAqB,CAqBjC;AArBY,sDAAqB;;;;;;;;;;;;;;;;;;;;;;;;;ACRlC,+FAAkF;AAClF,qHAAyD;AAEzD,oCAAoC;AAIpC,IAAa,oBAAoB;IAG7B,8BAAoB,EAAc,EAAU,QAAkB;QAA1C,OAAE,GAAF,EAAE,CAAY;QAAU,aAAQ,GAAR,QAAQ,CAAU;IAAI,CAAC;IAEnE,0CAAW,GAAX;QACI,IAAI,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QACjB,EAAE,CAAC,aAAa,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;QAC/C,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;YAC1B,IAAI,IAAI,GAAG,IAAI,gCAAY,EAAE,CAAC;YAC9B,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;QAChH,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,WAAW,EAAE,EAAE,CAAC,CAAC;QAC9E,CAAC;IACL,CAAC;IACL,2BAAC;AAAD,CAAC;AAdY;IAAR,YAAK,EAAE;;sDAAe;AADd,oBAAoB;IAHhC,gBAAS,CAAC;QACP,QAAQ,EAAE,uBAAuB;KACpC,CAAC;qCAI0B,iBAAU,EAAoB,eAAQ;GAHrD,oBAAoB,CAehC;AAfY,oDAAoB;;;;;;;;;;;;;;;;;;;ACPjC,mIAAoE;AACpE,yIAAwE;AACxE,yIAA0E;AAC1E,4IAA0E;AAE1E,kHAAgD;AAChD,sHAAkD;AAClD,sHAAkD;AAClD,wHAAmD;AACnD,oGAAyC;AAEzC,+EAOkB;AANd,oCAAQ;AAAE,4CAAY;AACtB,0CAAW;AACX,wCAAU;AAAE,4CAAY;AACxB,oCAAQ;AAAE,0CAAW;AACrB,oCAAQ;AACR,8BAAK;AAOT,yEAA8C;AAArC,wDAAkB;AAEd,yBAAiB,GAAU;IACtC,0CAAmB;IACnB,sCAAiB;CAClB,CAAC;AAEW,kBAAU,GAAU;IAC/B,0CAAmB;IACnB,sCAAiB;IACjB,4CAAqB;IACrB,4CAAoB;CACrB,CAAC;;;;;;;;;;;;;;;;;;;;;;ACpCF,+FAAyC;AAEzC,yIAAwE;AACxE,mIAAoE;AACpE,yIAA0E;AAC1E,4IAA0E;AAC1E,oHAAwD;AAkBxD,IAAa,kBAAkB;IAA/B;IACA,CAAC;IAAD,yBAAC;AAAD,CAAC;AADY,kBAAkB;IAhB9B,eAAQ,CAAC;QACN,YAAY,EAAE;YACV,0CAAmB;YACnB,sCAAiB;YACjB,4CAAqB;YACrB,4CAAoB;YACpB,gCAAY;SACf;QACD,OAAO,EAAE;YACL,0CAAmB;YACnB,sCAAiB;YACjB,4CAAqB;YACrB,4CAAoB;YACpB,gCAAY;SACf;KACJ,CAAC;GACW,kBAAkB,CAC9B;AADY,gDAAkB;;;;;;;;;;;;;;;;;;;;;;ACxB/B,+FAAoD;AAEpD;;;;;;;;EAQE;AAEF,IAAa,YAAY;IADzB;QAGY,UAAK,GAAG;YACZ,OAAO;YACP,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;SACP,CAAC;IAcN,CAAC;IAZG,gCAAS,GAAT,UAAU,KAAS,EAAE,SAAa;QAAxB,iCAAS;QAAE,yCAAa;QAC9B,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAE,KAAK,CAAG,CAAC,CAAC,CAAC;YACtB,MAAM,CAAC,GAAG,CAAC;QACf,CAAC;QACD,IAAI,IAAI,GAAG,CAAC,CAAC;QACb,OAAQ,KAAK,IAAI,IAAI,EAAG,CAAC;YACrB,KAAK,IAAI,IAAI,CAAC;YACd,IAAI,EAAG,CAAC;QACZ,CAAC;QAED,MAAM,CAAC,KAAK,CAAC,OAAO,CAAE,CAAE,SAAS,CAAE,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAE,CAAC;IACnE,CAAC;IACL,mBAAC;AAAD,CAAC;AAvBY,YAAY;IADxB,WAAI,CAAC,EAAC,IAAI,EAAE,UAAU,EAAC,CAAC;GACZ,YAAY,CAuBxB;AAvBY,oCAAY;;;;;;;;;;;;;;;;ACZzB,qGAA2C;AAG3C,IAAY,UAGX;AAHD,WAAY,UAAU;IAClB,6CAAK;IACL,mDAAQ;AACZ,CAAC,EAHW,UAAU,GAAV,kBAAU,KAAV,kBAAU,QAGrB;AAED;IAeI,oBAAa,IAAY,EAAE,KAAwB,EAAE,SAAkB;QAAlB,8CAAkB;QAN/D,UAAK,GAAW,EAAE,CAAC;QACnB,WAAM,GAAkB,IAAI,CAAC;QAC7B,cAAS,GAAkB,IAAI,CAAC;QAChC,cAAS,GAAoB,IAAI,CAAC;QAClC,UAAK,GAAsB,IAAI,CAAC;QAGpC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,EAAE,CAAC,CAAC,KAAK,YAAY,MAAM,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC;YAC9B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAC3B,MAAM,CAAC;QACX,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,YAAY,QAAQ,CAAC,CAAC,CAAC;YACnC,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC,QAAQ,CAAC;YACjC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,MAAM,CAAC;QACX,CAAC;QACD,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC;IAClD,CAAC;IA3BD,sBAAW,4BAAI;aAAf;YACI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;QACtB,CAAC;;;OAAA;IAED,sBAAW,4BAAI;aAAf;YACI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;QACtB,CAAC;;;OAAA;IAsBM,6BAAQ,GAAf,UAAgB,KAAkB;QAC9B,IAAI,MAAM,GAAG,KAAK,CAAC;QACnB,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACjB,KAAK,UAAU,CAAC,KAAK;gBAAE,CAAC;oBACpB,MAAM,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;wBACrB,KAAK,MAAM;4BAAE,CAAC;gCACV,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAS,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;oCAC/C,MAAM,GAAG,IAAI,CAAC;gCAClB,CAAC;4BACL,CAAC;4BAAA,KAAK,CAAC;wBAEP,KAAK,MAAM;4BAAE,CAAC;gCACV,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAS,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;oCAC/C,MAAM,GAAG,IAAI,CAAC;gCAClB,CAAC;4BACL,CAAC;4BAAA,KAAK,CAAC;wBAEP,KAAK,MAAM;4BAAE,CAAC;gCACV,EAAE,CAAC,CAAe,KAAK,CAAC,MAAM,CAAC,IAAK,CAAC,KAAK,CAAS,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;oCAC9D,MAAM,GAAG,IAAI,CAAC;gCAClB,CAAC;4BACL,CAAC;4BAAA,KAAK,CAAC;wBAEP,KAAK,MAAM;4BAAE,CAAC;gCACV,iDAAiD;gCACjD,IAAI,UAAU,GAAW,IAAI,iBAAQ,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,gBAAgB,EAAE,qBAAqB,CAAC,CAAC;gCAC/G,EAAE,CAAC,CAAC,UAAU,CAAC,KAAK,CAAS,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;oCACxC,MAAM,GAAG,IAAI,CAAC;gCAClB,CAAC;4BACL,CAAC;4BAAA,KAAK,CAAC;wBAEP,SAAS,CAAC;4BACN,MAAM,IAAI,KAAK,CAAC,uDAAuD,CAAC,CAAC;wBAC7E,CAAC;oBACL,CAAC;gBACL,CAAC;gBAAA,KAAK,CAAC;YAEP,KAAK,UAAU,CAAC,QAAQ;gBAAE,CAAC;oBACvB,MAAM,GAAc,IAAI,CAAC,SAAU,CAAC,KAAK,CAAC,CAAC;gBAC/C,CAAC;gBAAA,KAAK,CAAC;YAEP,SAAS,CAAC;gBACN,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;YACnD,CAAC;QACL,CAAC;QACD,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IACL,iBAAC;AAAD,CAAC;AA5EY,gCAAU;;;;;;;;;;;;;;;;ACRvB,2EAA0C;AAC1C,4FAAqC;AACrC,qGAA2C;AAG3C,sCAAsC;AAEtC,IAAM,yBAAyB,GAAuB,EAAE,CAAC;AAEzD,IAAM,WAAW,GAAQ;IACrB,KAAK,EAAE,CAAC;IACR,MAAM,EAAE,CAAC;IACT,OAAO,EAAE,CAAC;IACV,KAAK,EAAE,CAAC;IACR,WAAW,EAAE,SAAS;CACzB,CAAC;AAEF;IAMI,oBAAa,WAAgB;QAA7B,iBAMC;QALG,IAAI,OAAO,GAAG,kBAAK,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;QAC3C,IAAI,gBAAgB,GAAG,OAAO,GAAG,WAAW,CAAC,KAAK,GAAG,WAAW,CAAC;QACjE,IAAI,UAAU,GAAG,kBAAK,CAAC,QAAQ,CAAC,gBAAgB,CAAC,GAAI,IAAI,GAAG,KAAK,CAAC;QAClE,IAAI,MAAM,GAAG,UAAC,CAAU,EAAE,CAAM,IAAO,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAAC,KAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;QAAC,CAAC;QAAC,IAAI,CAAC,CAAC;YAAC,KAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;QAAC,CAAC,CAAC,CAAC,CAAC;QACrH,MAAM,CAAC,UAAU,EAAE,gBAAgB,CAAC,CAAC;IACzC,CAAC;IAEO,wCAAmB,GAA3B,UAA6B,IAAY;QACjC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;QAC1E,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IACnF,CAAC;IAEO,sCAAiB,GAAzB,UAA2B,MAAW;QAC9B,IAAI,CAAC,gBAAgB,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,CAAC;QACpE,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QACxB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QACxB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;IAChC,CAAC;IACL,iBAAC;AAAD,CAAC;AA3BY,gCAAU;AA6BvB;IA4EI;;;;;;;;OAQG;IACH,qBAAa,KAAU,EAAE,QAA6B,EAAE,SAAoB;QAnBpE,eAAU,GAA4B,IAAI,oBAAe,CAAC,CAAC,CAAC,CAAC;QAC7D,YAAO,GAAyB,IAAI,oBAAe,CAAC,WAAW,CAAC,CAAC;QAmBrE,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,yBAAyB,EAAE,QAAQ,CAAC,CAAC;QACtE,IAAI,CAAC,aAAa,GAAG,EAEpB,CAAC;QAEF,IAAI,CAAC,GAAG,GAAG,kBAAK,CAAC,QAAQ,EAAE,CAAC;QAE5B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QAEtB,IAAI,OAAO,GAAG,kBAAK,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QACrC,IAAI,IAAI,GAAG,OAAO,GAAG,IAAI,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,UAAU,CAAC,KAAK,CAAC,CAAC;QAE5E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,YAAY,GAAG,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;QACrD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAEzB,EAAE,CAAC,CAAC,OAAO,SAAS,KAAK,WAAW,CAAC,CAAC,CAAC;YACnC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;QACjC,CAAC;IACL,CAAC;IA1GD,sBAAW,iCAAQ;aAAnB,UAAoB,SAAc;YAC9B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC/B,CAAC;;;OAAA;IAED,sBAAW,2BAAE;aAAb;YACI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;QACpB,CAAC;;;OAAA;IAED,sBAAW,yCAAgB;aAA3B;YACI,MAAM,CAAC,kBAAK,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC/C,CAAC;;;OAAA;IAED,sBAAW,kCAAS;aAApB;YACI,MAAM,CAAC,kBAAK,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC5C,CAAC;;;OAAA;IAED,sBAAW,iCAAQ;aAAnB;YACI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;QACtC,CAAC;;;OAAA;IAED,sBAAW,gCAAO;aAAlB;YACI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;QAC7B,CAAC;;;OAAA;IAED,sBAAW,+BAAM;aAAjB;YACI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;QACtB,CAAC;;;OAAA;IAED,sBAAW,6BAAI;aAAf;YACI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;QAC3B,CAAC;;;OAAA;IAED,sBAAW,6BAAI;aAAf;YACI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;QAC3B,CAAC;;;OAAA;IAED,sBAAW,6BAAI;aAAf;YACI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC;QACvC,CAAC;;;OAAA;IAED,sBAAW,6BAAI;aAAf;YACI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;QAC3B,CAAC;;;OAAA;IAED,sBAAW,gCAAO;aAAlB;YACI,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;QAC5B,CAAC;;;OAAA;IAED,sBAAW,gCAAO;aAAlB;YACI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QAC3B,CAAC;;;OAAA;IAED,sBAAW,8BAAK;aAAhB;YACI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACzB,CAAC;;;OAAA;IAsDD;;;;;;OAMG;IACI,kCAAY,GAAnB,UAAqB,SAAmB;QACpC,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,YAAY,wBAAQ,CAAC,CAAC,CAAC;YACrC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACpC,CAAC;QACD,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACzC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;IAC/B,CAAC;IAED;;;;;;OAMG;IACI,iCAAW,GAAlB,UAAoB,QAA4B;QAC5C,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;IAC7D,CAAC;IAED;;;;;;OAMG;IACI,iCAAW,GAAlB;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,YAAY,wBAAQ,CAAC,CAAC,CAAC;YACrC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QAC1B,CAAC;QACD,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;IAC3D,CAAC;IAED;;;;;OAKG;IACI,4BAAM,GAAb;QACI,IAAI,SAAmB,CAAC;QAExB,IAAI,CAAC;YACD,SAAS,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACnC,CAAC;QAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACT,MAAM,IAAI,KAAK,CAAC,6DAA6D,GAAW,CAAE,CAAC,OAAO,CAAC,CAAC;QACxG,CAAC;QAED,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAEzB,IAAI,CAAC;YACD,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAC/B,CAAC;QAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACT,4BAA4B;QAChC,CAAC;IACL,CAAC;IAED;;;;;OAKG;IACI,4BAAM,GAAb;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YACpB,IAAI,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;YAClC,QAAQ,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;QACpC,CAAC;IACL,CAAC;IAEM,6BAAO,GAAd;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC9B,CAAC;IACL,CAAC;IAED;;;;;OAKG;IACI,4BAAM,GAAb;QACI,IAAI,SAAc,CAAC;QAEnB,IAAI,CAAC;YACD,SAAS,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACnC,CAAC;QAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACT,MAAM,IAAI,KAAK,CAAC,6DAA6D,GAAW,CAAE,CAAC,OAAO,CAAC,CAAC;QACxG,CAAC;QAED,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;QAErC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAC3B,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;IAC/B,CAAC;IAEM,gCAAU,GAAjB;QACI,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;IAC5B,CAAC;IAEM,iCAAW,GAAlB;QACI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;IAC7B,CAAC;IAEM,+BAAS,GAAhB;QACI,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC3F,CAAC;IAEM,qCAAe,GAAtB;QACI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IAC3B,CAAC;IAED;;OAEG;IAEH;;;OAGG;IACH,oCAAc,GAAd,cAAyB,MAAM,CAAC,CAAC,CAAC;IAElC,qCAAe,GAAf,UAAgB,KAAU,IAAU,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC;IAEpD;;;;OAIG;IACH,gCAAU,GAAV,UAAW,QAAgB,IAAU,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC;IAC3D;;;;;OAKG;IACH,+BAAS,GAAT,UAAU,QAAa,EAAE,MAAc,EAAE,OAAY,IAAU,QAAQ,GAAG,QAAQ,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC,OAAO,GAAG,OAAO,CAAC,CAAE,CAAC;IAC1H,6BAAO,GAAP,UAAQ,QAAa,EAAE,MAAc,EAAE,OAAY,IAAU,QAAQ,GAAG,QAAQ,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC,OAAO,GAAG,OAAO,CAAC,CAAE,CAAC;IAExH;;OAEG;IACH,qCAAe,GAAf;QACI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACxB,IAAI,CAAC,cAAc,EAAE,CAAC;IAC1B,CAAC;IAED,0CAAoB,GAApB,UAAsB,KAAU;QAC5B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACzB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;IAChC,CAAC;IAED,iCAAW,GAAX,UAAa,SAAiB;QAC1B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAChC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;IAC/B,CAAC;IAED,gCAAU,GAAV,UAAY,QAAa,EAAE,MAAc,EAAE,OAAY;QACnD,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,MAAM,EAAE,CAAC;QAClB,CAAC;QACD,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;IAC9C,CAAC;IAED,8BAAQ,GAAR,UAAU,QAAa,EAAE,MAAc,EAAE,OAAY;QACjD,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;IAC5C,CAAC;IAEO,oCAAc,GAAtB,UAAuB,KAAc;QACjC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC7B,CAAC;IACL,kBAAC;AAAD,CAAC;AAlTY,kCAAW;;;;;;;;;;;;;;;;;;;;;;;;;;AC9CxB,qGAAwD;AACxD,qGAA2C;AAC3C,8GAAiD;AAGjD,iCAAiC;AAEjC;IAAkC,gCAAQ;IACtC,sBAAa,QAA0B,EAAE,SAAoB;QAA7D,YACI,kBAAM,cAAc,EAAE,QAAQ,CAAC,SA4DlC;QA1DG,EAAE,CAAC,CAAC,OAAO,SAAS,KAAK,WAAW,CAAC,CAAC,CAAC;YACnC,KAAI,CAAC,YAAY,CAAE,IAAI,2BAAW,EAAE,CAAE,CAAC;YAEvC,KAAI,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,SAAS,CAAC,UAAC,GAAQ;gBAEzC,qBAAK,EACL,iBAAK,CACD;gBACR,EAAE,CAAC,CAAC,KAAK,YAAY,8BAAW,CAAC,CAAC,CAAC;oBAC/B,KAAI,CAAC,eAAe,CAAC,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;oBAC3C,KAAI,CAAC,oBAAoB,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;gBAC5C,CAAC;YACL,CAAC,CAAC,CAAC;YAEH,KAAI,CAAC,YAAY,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,UAAC,GAAQ;gBAErC,qBAAK,EACL,uBAAQ,EACR,mBAAM,EACN,qBAAO,CACH;gBACR,EAAE,CAAC,CAAC,KAAK,YAAY,8BAAW,CAAC,CAAC,CAAC;oBAC/B,IAAI,UAAQ,GAAa,KAAK,CAAC,WAAW,EAAE,CAAC;oBAC7C,IAAI,IAAI,GAAG,KAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;oBACvC,IAAI,MAAM,GAAG,UAAC,CAAU,EAAE,CAAc,EAAE,CAAM,EAAE,CAAS,EAAE,CAAM,IAAO,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBAAC,UAAQ,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBAAC,CAAC;oBAAC,IAAI,CAAC,CAAC;wBAAC,UAAQ,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBAAC,CAAC,CAAC,CAAC,CAAC;oBACxK,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;oBAC/C,UAAQ,CAAC,eAAe,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;gBAC/D,CAAC;YACL,CAAC,CAAC,CAAC;YAEH,KAAI,CAAC,YAAY,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,GAAQ;gBAEtC,qBAAK,EACL,uBAAQ,EACR,mBAAM,EACN,qBAAO,CACH;gBACR,EAAE,CAAC,CAAC,KAAK,YAAY,8BAAW,CAAC,CAAC,CAAC;oBAC/B,IAAI,QAAQ,GAAa,KAAK,CAAC,WAAW,EAAE,CAAC;oBAC7C,QAAQ,CAAC,YAAY,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;oBACxD,QAAQ,CAAC,eAAe,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;gBAC/D,CAAC;YACL,CAAC,CAAC,CAAC;YAEH,KAAI,CAAC,YAAY,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,GAAQ;gBAEtC,qBAAK,EACL,uBAAQ,EACR,mBAAM,EACN,qBAAO,CACH;gBACR,EAAE,CAAC,CAAC,KAAK,YAAY,8BAAW,CAAC,CAAC,CAAC;oBAC/B,IAAI,QAAQ,GAAa,KAAK,CAAC,WAAW,EAAE,CAAC;oBAC7C,QAAQ,CAAC,YAAY,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;oBACxD,QAAQ,CAAC,eAAe,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;gBAC/D,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC;;IACL,CAAC;IACL,mBAAC;AAAD,CAAC,CA/DiC,wBAAQ,GA+DzC;AA/DY,oCAAY;;;;;;;;;;;;;;;;;;;ACPzB,+FAAmC;AACnC,iGAAoC;AACpC,yFAAgC;AAChC,yFAAgC;AAChC,iGAAoC;AACpC,6FAAkC;AAClC,mFAA6B;;;;;;;;;;;;;;;;;;;;;;;;;;ACN7B,+FAA6C;AAC7C,4FAAqC;AAGrC,qHAAyD;AAEzD,iCAAiC;AAG7B,8BAAQ,CACM;AAElB;;;;;;GAMG;AACH;IAsBI;;;;;OAKG;IACH;QACI,IAAI,CAAC,GAAG,GAAG,kBAAK,CAAC,QAAQ,EAAE,CAAC;QAC5B,IAAI,CAAC,SAAS,GAAG,IAAI,mBAAY,EAAO,CAAC;QACzC,IAAI,CAAC,KAAK,GAAG,IAAI,mBAAY,EAAO,CAAC;QACrC,IAAI,CAAC,MAAM,GAAG,IAAI,mBAAY,EAAO,CAAC;QACtC,IAAI,CAAC,MAAM,GAAG,IAAI,mBAAY,EAAO,CAAC;QACtC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;IAC3B,CAAC;IA7BD,sBAAW,gCAAU;aAArB,UAAsB,GAAQ;YAEtB,qBAAK,EACL,6BAAW,CACP;YACR,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC3B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;oBACnB,EAAE,EAAE,KAAK,CAAC,EAAE;oBACZ,UAAU,EAAE,WAAW;iBAC1B,CAAC,CAAC;YACP,CAAC;QACL,CAAC;;;OAAA;IAoBD;;;;;;;;;OASG;IACI,0BAAO,GAAd,UAAgB,KAAkB,EAAE,QAAa,EAAE,MAAc,EAAE,OAAY;QAC3E,IAAI,QAAQ,GAAa,KAAK,CAAC,WAAW,EAAE,CAAC;QAC7C,IAAI,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;QACvC,IAAI,MAAM,GAAG,UAAC,CAAU,EAAE,CAAc,EAAE,CAAM,EAAE,CAAS,EAAE,CAAM,IAAO,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAAC,CAAC;QAAC,IAAI,CAAC,CAAC;YAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAAC,CAAC,CAAC,CAAC,CAAC;QACxK,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;QAC/C,QAAQ,CAAC,eAAe,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;IAC/D,CAAC;IAED;;;;;;;;;OASG;IACI,2BAAQ,GAAf,UAAiB,KAAkB,EAAE,QAAa,EAAE,MAAc,EAAE,OAAY;QAC5E,IAAI,QAAQ,GAAa,KAAK,CAAC,WAAW,EAAE,CAAC;QAC7C,QAAQ,CAAC,YAAY,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;QACxD,QAAQ,CAAC,eAAe,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;IAC/D,CAAC;IAED;;;;;;;;;OASG;IACI,2BAAQ,GAAf,UAAiB,KAAkB,EAAE,QAAa,EAAE,MAAc,EAAE,OAAY;QAC5E,IAAI,QAAQ,GAAa,KAAK,CAAC,WAAW,EAAE,CAAC;QAC7C,QAAQ,CAAC,YAAY,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;QACxD,QAAQ,CAAC,eAAe,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;IAC/D,CAAC;IAED;;;;;;;OAOG;IACI,iCAAc,GAArB,UAAsB,MAAc;QAC/B,MAAM,CAAC,CAAC,MAAM,IAAI,GAAG,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,MAAM,KAAK,GAAG,CAAC;IAC9D,CAAC;IAEM,8BAAW,GAAlB,UAAmB,KAAkB;QACjC,GAAG,CAAC,CAAiB,UAAiB,EAAjB,SAAI,CAAC,YAAY,EAAjB,cAAiB,EAAjB,IAAiB;YAAjC,IAAI,QAAQ;YACb,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,KAAK,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC3B,MAAM,CAAC,QAAQ,CAAC;YACpB,CAAC;SACJ;QACD,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IAEM,mCAAgB,GAAvB,UAAwB,KAAkB;QACtC,IAAI,QAAQ,GAAe,IAAI,CAAC;QAChC,GAAG,CAAC,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YACjC,EAAE,CAAC,CAAE,IAAI,CAAC,YAAY,CAAC,cAAc,CAAE,IAAI,CAAG,CAAC,CAAC,CAAC;gBAC7C,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;gBACnC,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,KAAK,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC3B,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;gBACvC,CAAC;YACL,CAAC;QACL,CAAC;IACL,CAAC;IAYL,eAAC;AAAD,CAAC;AAlIqB,4BAAQ;AAoI9B;;;;;;GAMG;AACH;IAAiC,+BAAQ;IACrC;eACI,iBAAO;IACX,CAAC;IAED;;;;;;OAMG;IACI,yBAAG,GAAV,UAAY,KAAkB;QAA9B,iBAgGC;QA/FG,IAAI,IAAoB,CAAC;QACzB,IAAI,QAAa,CAAC;QAClB,IAAI,QAAQ,GAAa,KAAK,CAAC,WAAW,EAAE,CAAC;QAE7C,IAAI,SAAS,GAAG,kBAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,EAAE,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QACrF,IAAI,gBAAgB,GAAG,kBAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,eAAe,EAAE,KAAK,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;QAC1G,IAAI,OAAO,GAAG,kBAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC/E,IAAI,IAAI,GAAG,kBAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACtE,IAAI,MAAM,GAAG,kBAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC5E,IAAI,QAAQ,GAAG,kBAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAElF,IAAI,IAAI,GAAW,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;QACxC,IAAI,IAAI,GAAG,CAAC,CAAC;QACb,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAI,WAAW,GAAgB,IAAI,CAAC;QACpC,IAAI,SAAS,GAAG,IAAI,gCAAY,EAAE,CAAC;QAEnC,IAAI,GAAG,IAAI,cAAc,EAAE,CAAC;QAE5B,IAAI,CAAC,UAAU,GAAG;YACd,KAAK,EAAE,KAAK;YACZ,WAAW,EAAE,IAAI;SACpB,CAAC;QAEF,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAE1B,EAAE,CAAC,CAAC,OAAO,SAAS,KAAK,WAAW,CAAC,CAAC,CAAC;YACnC,uBAAuB;YACvB,GAAG,CAAC,CAAY,UAAS,EAAT,uBAAS,EAAT,uBAAS,EAAT,IAAS;gBAApB,IAAI,GAAG;gBACR,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC;oBAClB,EAAE,CAAC,CAAE,GAAG,CAAC,cAAc,CAAE,GAAG,CAAG,CAAC,CAAC,CAAC;wBAC9B,IAAI,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;wBACrB,QAAQ,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;oBAChC,CAAC;gBACL,CAAC;aACJ;QACL,CAAC;QAED,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;QAEnD,EAAE,CAAC,CAAC,OAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC;YAClC,MAAM,IAAI,SAAS,CAAC,wBAAwB,CAAC,CAAC;QAClD,CAAC;QAED,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,UAAU,EAAE,UAAC,KAAoB;YAC1D,EAAE,CAAC,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC;gBACzB,IAAI,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC;gBACxC,IAAI,GAAG,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC;gBAC3B,KAAK,GAAG,IAAI,GAAG,KAAK,GAAG,IAAI,CAAC;gBAC5B,KAAK,GAAG,QAAQ,CAAM,KAAK,EAAE,EAAE,CAAC,CAAC;gBACjC,WAAW,GAAG,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;gBACzC,IAAI,IAAI,GAAG;oBACP,KAAK,EAAE,KAAK,CAAC,KAAK;oBAClB,MAAM,EAAE,KAAK,CAAC,MAAM;oBACpB,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC;oBACrD,KAAK,EAAE,KAAK;oBACZ,WAAW,EAAE,WAAW;iBAC3B,CAAC;gBACF,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAC,CAAC,CAAC;YACrD,CAAC;QACL,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE;YAC1B,IAAI,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC,CAAC;YACnE,IAAI,QAAQ,GAAG,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;YACnE,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;YAChC,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YACzB,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;QAC1F,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE;YAC3B,IAAI,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC,CAAC;YACnE,IAAI,QAAQ,GAAG,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;YACnE,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;YACjC,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YACzB,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;QAC3F,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE;YAC3B,IAAI,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC,CAAC;YACnE,IAAI,QAAQ,GAAG,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;YACnE,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;YACjC,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YACzB,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;QAC3F,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAE/B,IAAI,CAAC,eAAe,GAAG,gBAAgB,CAAC;QAExC,GAAG,CAAC,CAAC,IAAI,MAAI,IAAI,QAAQ,CAAC,CAAC,CAAC;YACxB,EAAE,CAAC,CAAE,QAAQ,CAAC,cAAc,CAAE,MAAI,CAAG,CAAC,CAAC,CAAC;gBACpC,IAAI,KAAK,GAAG,QAAQ,CAAC,MAAI,CAAC,CAAC;gBAC3B,IAAI,CAAC,gBAAgB,CAAC,MAAI,EAAE,KAAK,CAAC,CAAC;YACvC,CAAC;QACL,CAAC;QAED,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACxB,CAAC;IAEM,4BAAM,GAAb,UAAc,KAAkB;QAC5B,IAAI,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QACvC,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACb,QAAQ,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;YAC5B,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;QACjC,CAAC;IACL,CAAC;IACL,kBAAC;AAAD,CAAC,CArHgC,QAAQ,GAqHxC;AArHY,kCAAW;;;;;;;;;;;;;;;;AC9JxB,2EAA0C;AAC1C,4FAAqC;AACrC,8GAAiD;AAEjD,iHAA6D;AAI7D,sCAAsC;AAEtC,IAAM,sBAAsB,GAAoB;IAC5C,GAAG,EAAE,EAAE;IACP,KAAK,EAAE,MAAM;IACb,OAAO,EAAE,EAAE;IACX,OAAO,EAAE,EAAE;IACX,QAAQ,EAAE,EAAE;IACZ,UAAU,EAAE,KAAK;IACjB,MAAM,EAAE,MAAM;IACd,eAAe,EAAE,KAAK;IACtB,UAAU,EAAE,CAAC,CAAC;IACd,UAAU,EAAE,KAAK;IACjB,eAAe,EAAE,KAAK;IACtB,WAAW,EAAE,KAAK;CACrB,CAAC;AAEF;;;;;;GAMG;AACH;IAwBI;;;;;;OAMG;IACH,kBAAoB,IAAY,EAAE,QAA0B;QAAxC,SAAI,GAAJ,IAAI,CAAQ;QAfxB,YAAO,GAAmC,IAAI,oBAAe,CAAE,EAAE,CAAE,CAAC;QAgBxE,IAAI,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAE,KAAK,CAAE,CAAC;QAC1C,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,IAAI,IAAI,QAAQ,IAAI,UAAU,CAAC,CAAC;QACnD,IAAI,CAAC,cAAc,GAAG,CAAE,CAAE,WAAW,IAAI,GAAG,CAAE,IAAI,CAAE,aAAa,IAAI,GAAG,IAAI,QAAQ,IAAI,GAAG,CAAE,CAAE,GAAG,IAAI,GAAG,KAAK,CAAC;QAC/G,IAAI,CAAC,GAAG,GAAG,kBAAK,CAAC,QAAQ,EAAE,CAAC;QAC5B,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QAEjB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACjB,MAAM,IAAI,KAAK,CAAC,uEAAuE,CAAC,CAAC;QAC7F,CAAC;QAED,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,sBAAsB,EAAE,QAAQ,CAAC,CAAC;IACvE,CAAC;IAxCD,sBAAW,wBAAE;aAAb;YACI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;QACpB,CAAC;;;OAAA;IAED,sBAAW,4BAAM;aAAjB;YACI,MAAM,CAAC,kBAAK,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC5C,CAAC;;;OAAA;IAED,sBAAW,8BAAQ;aAAnB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;QACnC,CAAC;;;OAAA;IAgCD;;;;;;OAMG;IACI,8BAAW,GAAlB,UAAoB,QAAyB;QACzC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;IAC7D,CAAC;IAED;;;;;;OAMG;IACI,0BAAO,GAAd;QACI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IAED;;;;;;OAMG;IACI,gCAAa,GAApB;QACI,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC;IAC/B,CAAC;IAED;;;;;;OAMG;IACI,uBAAI,GAAX,UAAc,KAAmB;QAC7B,EAAE,CAAC,CAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAE,CAAC,CAAC,CAAC;YAClC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACxB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAE,UAAC,CAAC,EAAE,CAAC;gBACnB,EAAE,CAAC,CAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAE,CAAC,CAAC,CAAC;oBAC3B,MAAM,CAAC,CAAC,CAAC;gBACb,CAAC;gBACD,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;oBACpB,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;wBAClB,MAAM,CAAC,CAAC,CAAC,CAAC;oBACd,CAAC;oBACD,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;wBAClB,MAAM,CAAC,CAAC,CAAC;oBACb,CAAC;oBACD,MAAM,CAAC,CAAC,CAAC;gBACb,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,EAAE,CAAC,CAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAE,CAAC,CAAC,CAAC;wBACnC,MAAM,CAAC,CAAC,CAAC;oBACb,CAAC;oBACD,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;wBAC1B,MAAM,CAAC,CAAC,CAAC,CAAC;oBACd,CAAC;oBACD,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;wBAC1B,MAAM,CAAC,CAAC,CAAC;oBACb,CAAC;oBACD,MAAM,CAAC,CAAC,CAAC;gBACb,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC;IACL,CAAC;IAED;;;;;;;OAOG;IACI,6BAAU,GAAjB,UAAoB,KAAmB;QACnC,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACjC,EAAE,CAAC,CAAE,GAAG,IAAI,CAAE,CAAC,CAAC,CAAC;YACb,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;YAC3B,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IAEM,kCAAe,GAAtB,UAAwB,MAAW,EAAE,OAA4B;QAC7D,IAAI,SAAS,GAAkB,EAAE,CAAC;QAClC,IAAI,UAAuB,CAAC;QAC5B,IAAI,MAAM,GAAG,KAAK,CAAC;QAEnB,EAAE,CAAC,CAAC,kBAAK,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAC1B,8BAA8B;YAC9B,GAAG,CAAC,CAAqB,UAAY,EAAZ,WAAM,CAAC,KAAK,EAAZ,cAAY,EAAZ,IAAY;gBAAhC,IAAI,YAAY;gBACjB,IAAI,CAAC;oBACD,UAAU,GAAG,IAAI,8BAAW,CAAC,YAAY,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;gBAC9D,CAAC;gBAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACT,MAAM,KAAK,CAAC,2CAA2C,CAAC,CAAC;gBAC7D,CAAC;gBACD,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;gBAClC,CAAC,MAAM,CAAC,IAAI,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aAC1C;QACL,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,YAAY,MAAM,CAAC,CAAC,CAAC;YAClC,sCAAsC;YACtC,EAAE,CAAC,CAAE,CAAC,OAAO,MAAM,CAAC,CAAC,CAAC,KAAK,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,YAAY,8BAAW,CAAE,CAAC,CAAC,CAAC;gBAC7E,GAAG,CAAC,CAAc,UAAM,EAAN,iBAAM,EAAN,oBAAM,EAAN,IAAM;oBAAnB,IAAI,KAAK;oBACV,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;oBAC7B,CAAC,MAAM,CAAC,IAAI,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBACrC;gBACL,iCAAiC;YACjC,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,YAAY,8BAAW,CAAC,CAAC,CAAC;gBACvC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBAC9B,CAAC,MAAM,CAAC,IAAI,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACvC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,IAAI,KAAK,CAAC,4CAA0C,MAAM,MAAG,CAAC,CAAC;YACzE,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,MAAM,IAAI,KAAK,CAAC,mEAAiE,MAAM,MAAG,CAAC,CAAC;QAChG,CAAC;QACD,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,MAAM,CAAC,SAAS,CAAC;IACrB,CAAC;IAEM,0BAAO,GAAd,UAAgB,KAAkB;QAC9B,IAAI,CAAC;YACD,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACzB,CAAC;QAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACT,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;YACvB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;YAC5B,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;QAED,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;QACpC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;YAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBAChC,IAAI,CAAC,QAAQ,CAAC,4BAAQ,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;gBAChD,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAClB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC;gBAC3B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBACvB,IAAI,CAAC,QAAQ,CAAC,4BAAQ,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;gBAC/C,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,KAAK,CAAC,MAAM,EAAE,CAAC;gBAC5C,MAAM,CAAC,IAAI,CAAC;YAChB,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,QAAQ,CAAC,4BAAQ,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;YAChD,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAClB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC;YAC3B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;YACvB,IAAI,CAAC,QAAQ,CAAC,4BAAQ,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;YAC/C,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,KAAK,CAAC,MAAM,EAAE,CAAC;YAC5C,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QACD,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QAC5B,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IAEM,6BAAU,GAAjB,UAAmB,KAAkB;QACjC,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACjC,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;QACpC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACX,KAAK,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC;YAC3B,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IAEM,6BAAU,GAAjB,UAAmB,KAAkB;QACjC,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;QACpC,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC;YACpB,EAAE,CAAC,CAAE,KAAK,CAAC,cAAc,CAAE,GAAG,CAAG,CAAC,CAAC,CAAC;gBAChC,IAAI,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;gBACrB,EAAE,CAAC,CACC,CAAC,GAAG,CAAC,EAAE,KAAK,KAAK,CAAC,EAAE,CAAC;oBACrB,CAAE,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;wBAC9B,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,CAC9C,CAAC,CAAC,CAAC;oBACC,MAAM,CAAC,CAAC,GAAG,CAAC;gBAChB,CAAC;YACL,CAAC;QACL,CAAC;QACD,MAAM,CAAC,CAAC,CAAC,CAAC;IACd,CAAC;IAEM,4BAAS,GAAhB,UAAkB,OAAmB;QACjC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,OAAO,CAAC,OAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACvD,CAAC;IACL,CAAC;IAEM,2BAAQ,GAAf,UAAiB,KAAkB;QAC/B,GAAG,CAAC,CAAgB,UAAoC,EAApC,KAAe,IAAI,CAAC,OAAO,CAAC,OAAQ,EAApC,cAAoC,EAApC,IAAoC;YAAnD,IAAI,OAAO;YACZ,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC3B,MAAM,IAAI,KAAK,CAAC,WAAS,KAAK,CAAC,IAAI,mCAA8B,OAAO,CAAC,IAAI,MAAG,CAAC,CAAC;YACtF,CAAC;SACJ;QACD,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAEM,+BAAY,GAAnB,UAAqB,SAAmB;QACpC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC/B,CAAC;IAEM,+BAAY,GAAnB;QACI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IAEA;;;;;;;OAOG;IACI,iCAAc,GAArB,UAAsB,MAAc;QAChC,MAAM,CAAC,CAAC,MAAM,IAAI,GAAG,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,MAAM,KAAK,GAAG,CAAC;IAC7D,CAAC;IAEF;;OAEG;IACI,yBAAM,GAAb;QACI,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,GAAG,CAAC,CAAc,UAAa,EAAb,SAAI,CAAC,QAAQ,EAAb,cAAa,EAAb,IAAa;YAA1B,IAAI,KAAK;YACV,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;SAC1B;IACL,CAAC;IACM,yBAAM,GAAb;QACI,GAAG,CAAC,CAAc,UAAa,EAAb,SAAI,CAAC,QAAQ,EAAb,cAAa,EAAb,IAAa;YAA1B,IAAI,KAAK;YACV,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;SAChC;IACL,CAAC;IACM,yBAAM,GAAb;QACI,GAAG,CAAC,CAAc,UAAa,EAAb,SAAI,CAAC,QAAQ,EAAb,cAAa,EAAb,IAAa;YAA1B,IAAI,KAAK;YACV,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;SAC1B;IACL,CAAC;IACM,6BAAU,GAAjB,UAAmB,IAAiB;QAChC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACvB,CAAC;QACD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QAC3B,IAAI,CAAC,YAAY,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;IACM,mCAAgB,GAAvB,UAAyB,IAAiB;QACtC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/B,MAAM,CAAC;QACX,CAAC;QACD,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC,YAAY,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACvD,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;IACzC,CAAC;IAED;;OAEG;IAEH,+BAAY,GAAZ,UAAa,SAAmB,IAAU,MAAM,CAAC,CAAC,CAAC;IACnD,4BAAS,GAAT,UAAU,KAAkB,IAAU,MAAM,CAAC,CAAC,CAAC;IAC/C,iCAAc,GAAd,UAAe,KAAkB,IAAU,MAAM,CAAC,CAAC,CAAC;IACpD,oCAAiB,GAAjB,UAAkB,SAAmB,IAAU,MAAM,CAAC,CAAC,CAAC;IACxD,iCAAc,GAAd,UAAe,KAAkB,IAAU,MAAM,CAAC,CAAC,CAAC;IACpD,6BAAU,GAAV,UAAW,SAAmB,EAAE,SAAc,IAAU,MAAM,CAAC,CAAC,CAAC;IACjE,iCAAc,GAAd,UAAe,KAAkB,EAAE,SAAiB,IAAU,MAAM,CAAC,CAAC,CAAC;IACvE,sCAAmB,GAAnB,UAAoB,KAAkB,EAAE,SAAc,IAAU,MAAM,CAAC,CAAC,CAAC;IACzE,4BAAS,GAAT,UAAU,KAAkB,EAAE,SAAc,EAAE,OAAe,EAAE,QAAa,IAAU,MAAM,CAAC,CAAC,CAAC;IAC/F,0BAAO,GAAP,UAAQ,KAAkB,EAAE,SAAc,EAAE,OAAe,EAAE,QAAa,IAAU,MAAM,CAAC,CAAC,CAAC;IAC7F,6BAAU,GAAV,UAAW,KAAkB,EAAE,SAAc,EAAE,OAAe,EAAE,QAAa,IAAU,MAAM,CAAC,CAAC,CAAC;IAChG,gCAAa,GAAb,UAAc,SAAmB,IAAU,MAAM,CAAC,CAAC,CAAC;IAAA,CAAC;IAErD;;OAEG;IAEH;;;;;;;;OAQG;IACH,gCAAa,GAAb;QACI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC;IACD,6BAAU,GAAV,UAAW,KAAkB;QACzB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAC1B,CAAC;IACD,kCAAe,GAAf,UAAgB,KAAkB;QAC9B,IAAI,CAAC,QAAQ,CAAC,4BAAQ,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;QAC/C,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;IAC/B,CAAC;IACD,qCAAkB,GAAlB;QACI,IAAI,CAAC,QAAQ,CAAC,4BAAQ,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;QAC/C,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IACD,kCAAe,GAAf,UAAgB,KAAkB;QAC9B,IAAI,CAAC,QAAQ,CAAC,4BAAQ,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC;QACjD,KAAK,CAAC,eAAe,EAAE,CAAC;QACxB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;IAC/B,CAAC;IACD,uCAAoB,GAApB,UAAqB,KAAkB,EAAE,MAAW;QAChD,IAAI,CAAC,QAAQ,CAAC,4BAAQ,CAAC,iBAAiB,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;QACzD,KAAK,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;QACnC,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IAC5C,CAAC;IACD,kCAAe,GAAf,UAAgB,KAAkB,EAAE,SAAiB;QACjD,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QAC7B,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;QACtC,IAAI,CAAC,WAAW,EAAE,CAAC;IACtB,CAAC;IACF,8BAAW,GAAX;QACI,IAAI,KAAK,GAAkB,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;QACnD,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACnB,IAAI,OAAO,GAAG,CAAC,CAAC;YAChB,GAAG,CAAC,CAAa,UAAK,EAAL,eAAK,EAAL,mBAAK,EAAL,IAAK;gBAAjB,IAAI,IAAI;gBACT,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;oBAC7B,OAAO,IAAI,GAAG,CAAC;gBACnB,CAAC;gBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;oBAC1B,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC;gBAC7B,CAAC;aACJ;YACD,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;YAC7C,IAAI,CAAC,QAAQ,CAAC,4BAAQ,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;YACnD,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;YAC/B,CAAC,OAAO,IAAI,GAAG,CAAC,IAAI,IAAI,CAAC,cAAc,EAAE,CAAC;YAC1C,MAAM,CAAC;QACX,CAAC;QACD,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;QAC3B,IAAI,CAAC,cAAc,EAAE,CAAC;IACzB,CAAC;IACD,iCAAc,GAAd,UAAe,KAAkB,EAAE,QAAa,EAAE,MAAc,EAAE,OAAY;QAC3E,IAAI,CAAC,QAAQ,CAAC,4BAAQ,CAAC,iBAAiB,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;QAC5E,KAAK,CAAC,UAAU,CAAC,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;QAC5C,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;IACpD,CAAC;IACD,+BAAY,GAAZ,UAAa,KAAkB,EAAE,QAAa,EAAE,MAAc,EAAE,OAAY;QACzE,IAAI,CAAC,QAAQ,CAAC,4BAAQ,CAAC,gBAAgB,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;QAC3E,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;IAClD,CAAC;IACD,kCAAe,GAAf,UAAgB,KAAkB,EAAE,QAAa,EAAE,MAAc,EAAE,OAAY;QAC5E,IAAI,CAAC,QAAQ,CAAC,4BAAQ,CAAC,kBAAkB,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;QAC7E,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;IACrD,CAAC;IACD,iCAAc,GAAd;QACG,IAAI,CAAC,QAAQ,CAAC,4BAAQ,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;QAChD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC;IAEF,iCAAc,GAAd,UAAe,aAAkB;QAC7B,MAAM,CAAC,UAAC,IAAS;YACb,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACP,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,IAAI,CAAC;YACrD,CAAC;YACD,MAAM,CAAC,aAAa,CAAC;QACzB,CAAC,CAAC;IACN,CAAC;IACD,gCAAa,GAAb,UAAc,OAAY;QACtB,IAAI,MAAM,GAAQ,EAAE,EAAE,GAAQ,EAAE,GAAQ,EAAE,CAAM,CAAC;QAEjD,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YAAC,MAAM,CAAC,MAAM,CAAC;QAAC,CAAC;QAEhC,IAAI,aAAa,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACxC,GAAG,CAAC,CAAa,UAAa,EAAb,+BAAa,EAAb,2BAAa,EAAb,IAAa;YAAzB,IAAI,IAAI;YACT,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YACtB,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;YAC5C,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;YAE/B,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACN,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,CAAC;YAC/D,CAAC;SACJ;QAED,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IACD,qCAAkB,GAAlB,UAAmB,QAAa,EAAE,OAAY;QAC1C,OAAO,GAAG,EAAE,CAAC;QACb,MAAM,CAAC,QAAQ,CAAC;IACpB,CAAC;IAED,2BAAQ,GAAR,UAAS,IAAc;QAAE,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,6BAAc;;QACnC,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAC1B,EAAE,CAAC,CAAE,IAAI,CAAC,MAAM,CAAC,cAAc,CAAE,GAAG,CAAG,CAAC,CAAC,CAAC;gBACtC,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;gBAC3B,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC;oBACpB,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;wBACX,KAAK,4BAAQ,CAAC,gBAAgB,CAAC;wBAC/B,KAAK,4BAAQ,CAAC,gBAAgB,CAAC;wBAC/B,KAAK,4BAAQ,CAAC,iBAAiB,CAAC;wBAChC,KAAK,4BAAQ,CAAC,eAAe,CAAC;wBAC9B,KAAK,4BAAQ,CAAC,eAAe,CAAC;wBAC9B,KAAK,4BAAQ,CAAC,iBAAiB,CAAC;wBAChC,KAAK,4BAAQ,CAAC,iBAAiB;4BAAE,CAAC;gCACnB,GAAG,CAAC,QAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;4BACtC,CAAC;4BAAA,KAAK,CAAC;wBAEP,KAAK,4BAAQ,CAAC,kBAAkB;4BAAE,CAAC;gCACpB,GAAG,CAAC,QAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;4BAC/C,CAAC;4BAAA,KAAK,CAAC;wBAEP,KAAK,4BAAQ,CAAC,gBAAgB,CAAC;wBAC/B,KAAK,4BAAQ,CAAC,iBAAiB,CAAC;wBAChC,KAAK,4BAAQ,CAAC,gBAAgB,CAAC;wBAC/B,KAAK,4BAAQ,CAAC,kBAAkB;4BAAE,CAAC;gCACpB,GAAG,CAAC,QAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;4BACjE,CAAC;4BAAA,KAAK,CAAC;wBAEP,SAAS,CAAC;4BACN,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;wBACvD,CAAC;oBACL,CAAC;gBACL,CAAC;YACL,CAAC;QACL,CAAC;IACL,CAAC;IAED;;;;;;;;OAQG;IACK,6BAAU,GAAlB,UAAqB,IAAkB;QACnC,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAC1B,EAAE,CAAC,CAAE,IAAI,CAAC,MAAM,CAAC,cAAc,CAAE,GAAG,CAAG,CAAC,CAAC,CAAC;gBACtC,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;gBAC3B,EAAE,CAAC,CACC,CAAC,GAAG,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,QAAQ,KAAK,EAAE,GAAG,IAAI,CAAC,QAAQ,CACzE,CAAC,CAAC,CAAC;oBACC,MAAM,CAAC,CAAC,GAAG,CAAC;gBAChB,CAAC;YACL,CAAC;QACL,CAAC;QACD,MAAM,CAAC,CAAC,CAAC,CAAC;IACd,CAAC;IAEO,+BAAY,GAApB,UAAsB,OAAmB;QACrC,IAAI,OAAO,GAAiB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QACjD,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,OAAO,CAAC,CAAC,CAAC;YACtB,EAAE,CAAC,CAAE,OAAO,CAAC,cAAc,CAAE,GAAG,CAAG,CAAC,CAAC,CAAC;gBAClC,IAAI,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;gBACvB,EAAE,CAAC,CAAE,GAAG,CAAC,IAAI,KAAK,OAAO,CAAC,IAAK,CAAC,CAAC,CAAC;oBAC9B,MAAM,CAAC,CAAC,GAAG,CAAC;gBAChB,CAAC;YACL,CAAC;QACL,CAAC;QACD,MAAM,CAAC,CAAC,CAAC,CAAC;IACd,CAAC;IACL,eAAC;AAAD,CAAC;AApfqB,4BAAQ;;;;;;;;;;;;;;;;AChC9B,IAAY,QAeX;AAfD,WAAY,QAAQ;IAChB,+DAAgB;IAChB,6DAAe;IACf,6DAAe;IAEf,iEAAiB;IACjB,mEAAkB;IAClB,iEAAiB;IACjB,mEAAkB;IAClB,+DAAgB;IAChB,+DAAgB;IAEhB,+DAAgB;IAChB,kEAAiB;IACjB,kEAAiB;AACrB,CAAC,EAfW,QAAQ,GAAR,gBAAQ,KAAR,gBAAQ,QAenB;AAED;IAiBI,sBAAa,SAAmB,EAAE,SAAmB,EAAE,SAAa;QAAb,yCAAa;QAJ5D,UAAK,GAAoB,IAAI,CAAC;QAC9B,cAAS,GAAoB,IAAI,CAAC;QAClC,cAAS,GAAkB,IAAI,CAAC;QAGpC,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,SAAS,GAAG,CAAC,SAAS,CAAC;IAChC,CAAC;IApBD,sBAAW,8BAAI;aAAf;YACI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;QACtB,CAAC;;;OAAA;IAED,sBAAW,kCAAQ;aAAnB;YACI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QAC1B,CAAC;;;OAAA;IAED,sBAAW,kCAAQ;aAAnB;YACI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QAC1B,CAAC;;;OAAA;IAWL,mBAAC;AAAD,CAAC;AAtBY,oCAAY;;;;;;;;;;;;;;;;AChBzB,mGAA6C;AAE7C;IAAA;IA6DA,CAAC;IAzDG;;;;;;;OAOG;IACI,cAAQ,GAAf;QACI,MAAM,CAAC,sCAAsC,CAAC,OAAO,CAAC,OAAO,EAAE,UAAU,CAAC;YACtE,sCAAsC;YACtC,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;YACpE,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;;;;;;OAQG;IACI,eAAS,GAAhB,UAAkB,MAAW;QACzB,MAAM,CAAC,CAAC,CAAC,CAAE,MAAM;YACjB,CAAE,MAAM,CAAC,QAAQ;gBACjB,CAAC,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,CAAE,CAAE,CAAC,CAAC,oDAAoD;IACzG,CAAC;IAED;;;;;;;;OAQG;IACI,cAAQ,GAAf,UAAiB,MAAW;QACxB,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,MAAM,KAAK,QAAQ,CAAC,CAAC;IAC1C,CAAC;IAEM,iBAAW,GAAlB;QAAoB,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,yBAAc;;QAC9B,IAAI,MAAM,GAAQ,IAAI,CAAC,CAAC,CAAC,CAAC;QAC1B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACnC,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,KAAK,WAAW,CAAC,CAAC,CAAC;gBACjC,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACrB,CAAC;QACL,CAAC;QACD,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IAEM,kBAAY,GAAnB,UAAqB,OAAqB;QACtC,MAAM,CAAC,IAAI,uBAAU,CAAC,UAAC,EAAO,IAAK,cAAO,CAAC,SAAS,CAAC,EAAE,CAAC,EAArB,CAAqB,CAAC,CAAC;IAC9D,CAAC;IACL,YAAC;AAAD,CAAC;AA5DU,mBAAa,GAAW,CAAC,CAAC;AAE1B,aAAO,GAAG,cAAc,QAAC,KAAK,CAAC,aAAa,EAAE,CAAC,CAAC,QAAQ,EAAE,EAAlC,CAAkC,CAAC;AAHzD,sBAAK","file":"ng2-file-uploader.umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","export * from './module';\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./index.ts","// tslint:disable:max-line-length\n// tslint:disable:no-unused-expression\nimport { Directive, EventEmitter, ElementRef, Renderer, HostListener, Output, Input, OnInit, OnDestroy } from '@angular/core';\nimport { FileManager } from '../source/fileManager.core';\nimport { Transfer } from '../source/transfer.core';\nimport { FileManagerOptions } from '../interface';\n\n//\n// Directive to support dragging and dropping and element onto a div\n//\n@Directive({\n    // Selector required in component HTML\n    // tslint:disable-next-line:directive-selector\n    selector: '[ng2File2Drop]'\n})\nexport class FileDropDirective implements OnInit, OnDestroy {\n    @Output()\n    public fileHoverStart: EventEmitter<any> = new EventEmitter<any>();\n    @Output()\n    public fileHoverEnd: EventEmitter<any> = new EventEmitter<any>();\n    @Output()\n    public fileAccepted: EventEmitter<FileManager[]> = new EventEmitter<FileManager[]>();\n    @Output()\n    public fileRejected: EventEmitter<Error> = new EventEmitter<Error>();\n\n    @Input()\n    public fileOptions: FileManagerOptions;\n    @Input()\n    public uploader: Transfer;\n\n    private _InputFile: any = null;\n    private _files: FileManager[];\n\n    //\n    // Constructor requires an element reference that instantiated this directive\n    //\n    public constructor(private element: ElementRef, private renderer: Renderer) { }\n\n    //\n    // Initialisation\n    //\n    public ngOnInit() {\n        this._files = [];\n        this.renderer.setElementClass(this.element.nativeElement, 'drop-area', true);\n    }\n\n    public ngOnDestroy() {\n        if (this._files.length > 0) {\n            for (let _file of this._files) {\n                if (_file instanceof FileManager) {\n                    if (!_file.isUploaded()) {\n                        _file.cancel();\n                        this.uploader.removeFile(_file);\n                    }\n                }\n            }\n        }\n    }\n\n    //\n    // Called when the element has content dragged over\n    //\n    @HostListener('dragover', ['$event'])\n    public onDragOver(event: Event): void {\n\n        // If we're already in the on-drag, don't bother with this\n        if (this._InputFile === null) {\n            // Get the object being dragged and reference it as a copy action\n            this._InputFile = this.getDataTransferObject(event);\n            if (this._InputFile === null) {\n                return;\n            }\n            this.renderer.setElementClass(this.element.nativeElement, 'drop-enter', true);\n            let _dropValueText = 'Drop now';\n            this.renderer.setElementAttribute(this.element.nativeElement, 'dropValueText', _dropValueText);\n\n            // Let the client know\n            this.fileHoverStart.emit();\n        }\n\n        // Don't propagate\n        this.preventAndStopEventPropagation(event);\n    }\n\n    //\n    // Called when the element has dragged content leave\n    //\n    @HostListener('dragleave', ['$event'])\n    public onDragLeave(event: Event): void {\n\n        // Only bother if we have a file\n        if (this._InputFile !== null) {\n            this.renderer.setElementClass(this.element.nativeElement, 'drop-enter', false);\n            this.renderer.setElementAttribute(this.element.nativeElement, 'dropValueText', '');\n\n            // Finished with the file\n            this._InputFile = null;\n            if (event.currentTarget === (this as any).element[0]) {\n                return;\n            }\n\n            // Let the client know\n            this.fileHoverEnd.emit();\n        }\n\n        // Don't let it continue\n        this.preventAndStopEventPropagation(event);\n    }\n\n    //\n    // Called when the element has content dropped\n    //\n    @HostListener('drop', ['$event'])\n    public onDrop(event: Event): void {\n\n        // Only bother if we have a file\n        if (this._InputFile !== null) {\n            this.renderer.setElementClass(this.element.nativeElement, 'drop-enter', false);\n            this.renderer.setElementAttribute(this.element.nativeElement, 'dropValueText', '');\n\n            // Let the client know\n            this.fileHoverEnd.emit();\n\n            // Update our data\n            this._InputFile = this.getDataTransferObject(event);\n\n            if (this._InputFile.files.length === 0) {\n                this._InputFile  = null;\n                return;\n            }\n\n            let filesData: FileList = this._InputFile.files;\n\n            if (!this.hasFiles(this._InputFile.types)) {\n                return;\n            }\n\n            this.readFile(filesData);\n\n            this.fileAccepted.emit(this._files);\n\n            // Finished with the file\n            this._InputFile  = null;\n        }\n\n        // Don't let it continue\n        this.preventAndStopEventPropagation(event);\n    }\n\n    //\n    // Stops the drag/drop events propagating\n    //\n    private preventAndStopEventPropagation(event: Event): void {\n        event.preventDefault();\n        event.stopPropagation();\n    }\n\n    private readFile(_files: FileList): void {\n        let fmObject: FileManager;\n        for (let i = 0; i < _files.length; i++) {\n            let file = _files[i];\n            try {\n                fmObject = new FileManager(file, this.fileOptions, this.uploader);\n            } catch (e) {\n                if (e.status === 100) {\n                    this.fileRejected.emit(e);\n                } else {\n                    this.fileRejected.emit(e);\n                }\n                throw new Error('Something goes wrong e: ' + e.message);\n            }\n\n            (fmObject.inQueue) && this._files.push(fmObject);\n        }\n    }\n\n    //\n    // Returns the file dragged into the directive\n    //\n    private getDataTransferObject(event: Event | any): DataTransfer {\n        return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer;\n    }\n\n    private hasFiles(types: any): boolean {\n        if (!types) {\n            return false;\n        }\n\n        if (types.indexOf) {\n            return types.indexOf('Files') !== -1;\n        }\n\n        if (types.contains) {\n            return types.contains('Files');\n        }\n\n        return false;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./module/directives/fileDrop.directive.ts","// tslint:disable:max-line-length\n// tslint:disable:no-unused-expression\nimport { Directive, EventEmitter, HostListener, HostBinding, Output, Input, OnInit, OnDestroy } from '@angular/core';\nimport { FileManager } from '../source/fileManager.core';\nimport { FileUploader } from '../source/fileUploader.core';\nimport { FileManagerOptions } from '../interface';\n\n//\n// Directive to support select file from inputfield\n//\n@Directive({\n    // Selector required in component HTML\n    // tslint:disable-next-line:directive-selector\n    selector: '[ng2File2Select]'\n})\nexport class FileSelectDirective implements OnInit, OnDestroy {\n    @HostBinding('attr.role') role = 'input';\n    @HostBinding('attr.type') type = 'file';\n\n    @Output()\n    public fileHoverStart: EventEmitter<any> = new EventEmitter<any>();\n    @Output()\n    public fileHoverEnd: EventEmitter<any> = new EventEmitter<any>();\n    @Output()\n    public fileAccepted: EventEmitter<FileManager[]> = new EventEmitter<FileManager[]>();\n    @Output()\n    public fileRejected: EventEmitter<Error> = new EventEmitter<Error>();\n\n    @Input()\n    public fileOptions: FileManagerOptions;\n    @Input()\n    public uploader: FileUploader;\n\n    private _InputFile: any = null;\n    private _files: FileManager[];\n\n    //\n    // Constructor requires an element reference that instantiated this directive\n    //\n    public constructor() { }\n\n    //\n    // Initialisation\n    //\n    public ngOnInit() {\n        this._files = [];\n    }\n\n    public ngOnDestroy() {\n        if (this._files.length > 0) {\n            for (let _file of this._files) {\n                if (_file instanceof FileManager) {\n                    if (!_file.isUploaded()) {\n                        _file.cancel();\n                        this.uploader.removeFile(_file);\n                    }\n                }\n            }\n        }\n    }\n\n    //\n    // Called when the element was choosen\n    //\n    @HostListener('change', ['$event'])\n    public onChange(event: Event): void {\n        // Update our data\n        this._InputFile = this.getEventTarget(event);\n\n        if (this._InputFile.files.length === 0) {\n            this._InputFile  = null;\n            return;\n        }\n\n        let filesData: FileList = this._InputFile.files;\n\n        console.log('onChange', filesData);\n        this.readFile(filesData);\n\n        this.fileAccepted.emit(this._files);\n\n        // Finished with the file\n        this._InputFile  = null;\n\n        // Don't let it continue\n        this.preventAndStopEventPropagation(event);\n    }\n\n    //\n    // Stops the drag/drop events propagating\n    //\n    private preventAndStopEventPropagation(event: Event): void {\n        event.preventDefault();\n        event.stopPropagation();\n    }\n\n    private readFile(_files: FileList): void {\n        let fmObject: FileManager;\n        for (let i = 0; i < _files.length; i++) {\n            let file = _files[i];\n            try {\n                fmObject = new FileManager(file, this.fileOptions, this.uploader);\n            } catch (e) {\n                if (e.status === 100) {\n                    this.fileRejected.emit(e);\n                } else {\n                    this.fileRejected.emit(e);\n                }\n                throw new Error('Something goes wrong e: ' + e.message);\n            }\n\n            (fmObject.inQueue) && this._files.push(fmObject);\n        }\n    }\n\n    //\n    // Returns the file dragged into the directive\n    //\n    private getEventTarget(event: Event | any): any {\n        return event.target;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./module/directives/fileSelect.directive.ts","import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\n\nlet {\n    FileReader\n} = (<any>window);\n\n// tslint:disable-next-line:directive-selector\n@Directive({ selector: 'img[imgPreview]' })\nexport class ImagePreviewDirective implements OnChanges {\n\n    @Input() image: any;\n\n    constructor(private el: ElementRef) { }\n\n    ngOnChanges() {\n        let reader = new FileReader();\n        let el = this.el;\n\n        // tslint:disable-next-line:max-line-length\n        el.nativeElement.src = 'data:image/svg+xml;charset=utf-8,%3Csvg xmlns%3D\\'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg\\' viewBox%3D\\'0 0 200 150\\'%2F%3E';\n\n        reader.onloadend = function () {\n            el.nativeElement.src = reader.result;\n        };\n\n        if (this.image) {\n            return reader.readAsDataURL(this.image.element);\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./module/directives/imgPreview.directive.ts","import { Directive, ElementRef, Input, Renderer, OnChanges } from '@angular/core';\nimport { FileSizePipe } from '../pipe/fileSizePipe.pipe';\n\n// tslint:disable:directive-selector\n@Directive({\n    selector: 'progress[progressBar]'\n})\nexport class ProgressBarDirective implements OnChanges {\n    @Input() progress: any;\n\n    constructor(private el: ElementRef, private renderer: Renderer) { }\n\n    ngOnChanges() {\n        let el = this.el;\n        el.nativeElement.value = this.progress.percent;\n        if (this.progress.speed > 0) {\n            let pipe = new FileSizePipe();\n            this.renderer.setElementAttribute(this.el.nativeElement, 'speedText', pipe.transform(this.progress.loaded));\n        } else {\n            this.renderer.setElementAttribute(this.el.nativeElement, 'speedText', '');\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./module/directives/progressBar.directive.ts","import { FileDropDirective } from './directives/fileDrop.directive';\nimport { FileSelectDirective } from './directives/fileSelect.directive';\nimport { ImagePreviewDirective } from './directives/imgPreview.directive';\nimport { ProgressBarDirective } from './directives/progressBar.directive';\n\nexport * from './directives/fileDrop.directive';\nexport * from './directives/fileSelect.directive';\nexport * from './directives/imgPreview.directive';\nexport * from './directives/progressBar.directive';\nexport * from './pipe/fileSizePipe.pipe';\n\nexport {\n    hookType, UploaderHook,\n    FileManager,\n    FileFilter, FileUploader,\n    Protocol, ProtocolXHR,\n    Transfer,\n    Utils\n} from './source';\n\nexport {\n    FileManagerOptions, TransferOptions\n} from './interface'\n\nexport { FileUploaderModule } from './module';\n\nexport const UPLOAD_DIRECTIVES: any[] = [\n  FileSelectDirective,\n  FileDropDirective\n];\n\nexport const UPLOAD_ALL: any[] = [\n  FileSelectDirective,\n  FileDropDirective,\n  ImagePreviewDirective,\n  ProgressBarDirective\n];\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./module/index.ts","import { NgModule } from '@angular/core';\n\nimport { FileSelectDirective } from './directives/fileSelect.directive';\nimport { FileDropDirective } from './directives/fileDrop.directive';\nimport { ImagePreviewDirective } from './directives/imgPreview.directive';\nimport { ProgressBarDirective } from './directives/progressBar.directive';\nimport { FileSizePipe } from './pipe/fileSizePipe.pipe';\n\n@NgModule({\n    declarations: [\n        FileSelectDirective,\n        FileDropDirective,\n        ImagePreviewDirective,\n        ProgressBarDirective,\n        FileSizePipe\n    ],\n    exports: [\n        FileSelectDirective,\n        FileDropDirective,\n        ImagePreviewDirective,\n        ProgressBarDirective,\n        FileSizePipe\n    ]\n})\nexport class FileUploaderModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./module/module.ts","import { Pipe, PipeTransform } from '@angular/core';\n\n/*\n * Convert bytes into largest possible unit.\n * Takes an precision argument that defaults to 2.\n * Usage:\n *   bytes | fileSize:precision\n * Example:\n *   {{ 1024 |  fileSize}}\n *   formats to: 1 KB\n*/\n@Pipe({name: 'fileSize'})\nexport class FileSizePipe implements PipeTransform {\n\n    private units = [\n        'bytes',\n        'KB',\n        'MB',\n        'GB',\n        'TB',\n        'PB'\n    ];\n\n    transform(bytes = 0, precision = 2): string {\n        if (!isFinite( bytes ) ) {\n            return '?';\n        }\n        let unit = 0;\n        while ( bytes >= 1024 ) {\n            bytes /= 1024;\n            unit ++;\n        }\n\n        return bytes.toFixed( + precision ) + ' ' + this.units[ unit ];\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./module/pipe/fileSizePipe.pipe.ts","import { DatePipe } from '@angular/common';\nimport { FileManager } from '../source/fileManager.core';\n\nexport enum filterType {\n    regex,\n    callback\n}\n\nexport class FileFilter {\n    public get name(): string {\n        return this._name;\n    }\n\n    public get type(): filterType | null {\n        return this._type;\n    }\n\n    private _name: string = '';\n    private _regex: RegExp | null = null;\n    private _regCheck: string | null = null;\n    private _callback: Function | null = null;\n    private _type: filterType | null = null;\n\n    constructor (name: string, _data: RegExp | Function, _regCheck = 'name') {\n        this._name = name;\n        if (_data instanceof RegExp) {\n            this._type = filterType.regex;\n            this._regex = _data;\n            this._regCheck = _regCheck;\n            return;\n        } else if (_data instanceof Function) {\n            this._type = filterType.callback;\n            this._callback = _data;\n            return;\n        }\n        throw new Error('FilterData is not defined.');\n    }\n    public validate(_file: FileManager): boolean {\n        let _valid = false;\n        switch (this._type) {\n            case filterType.regex: {\n                switch (this._regCheck) {\n                    case 'name': {\n                        if (_file.object.name.match(<RegExp>this._regex)) {\n                            _valid = true;\n                        }\n                    }break;\n\n                    case 'type': {\n                        if (_file.object.type.match(<RegExp>this._regex)) {\n                            _valid = true;\n                        }\n                    }break;\n\n                    case 'size': {\n                        if ((<string><any>_file.object.size).match(<RegExp>this._regex)) {\n                            _valid = true;\n                        }\n                    }break;\n\n                    case 'date': {\n                        // Format for validation is `2017-01-01 10:10:10`\n                        let _checkDate: string = new DatePipe('en-US').transform(_file.object.lastModifiedDate, 'yyyy-MM-dd hh:mm:ss');\n                        if (_checkDate.match(<RegExp>this._regex)) {\n                            _valid = true;\n                        }\n                    }break;\n\n                    default: {\n                        throw new Error('RegExp can only check on `name | type | size | date`.');\n                    }\n                }\n            }break;\n\n            case filterType.callback: {\n                _valid = (<Function>this._callback)(_file);\n            }break;\n\n            default: {\n                throw new Error('Filter type is not defined.');\n            }\n        }\n        return _valid;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./module/source/fileFilter.core.ts","import { BehaviorSubject } from 'rxjs/Rx';\nimport { Utils } from './utils.core';\nimport { Transfer } from './transfer.core';\nimport { FileManagerOptions } from '../interface/fileManagerOptions.interface';\n\n// tslint:disable:no-unused-expression\n\nconst FileManagerOptionsDefault: FileManagerOptions = {};\n\nconst speedObject: any = {\n    total: 0,\n    loaded: 0,\n    percent: 0,\n    speed: 0,\n    speedToText: '0 bytes'\n};\n\nexport class FileObject {\n    lastModifiedDate: Date | null;\n    size: number | null;\n    type: string;\n    name: string;\n\n    constructor (fileOrInput: any) {\n        let isInput = Utils.isElement(fileOrInput);\n        let fakePathOrObject = isInput ? fileOrInput.value : fileOrInput;\n        let isFakePath = Utils.isString(fakePathOrObject) ?  true : false;\n        let method = (v: boolean, x: any) => { if (v) { this._createFromFakePath(x); } else { this._createFromObject(x); } };\n        method(isFakePath, fakePathOrObject);\n    }\n\n    private _createFromFakePath (path: string) {\n            this.lastModifiedDate = null;\n            this.size = null;\n            this.type = 'like/' + path.slice(path.lastIndexOf('.') + 1).toLowerCase();\n            this.name = path.slice(path.lastIndexOf('/') + path.lastIndexOf('\\\\') + 2);\n    }\n\n    private _createFromObject (object: any) {\n            this.lastModifiedDate = new Date(object.lastModifiedDate.getTime());\n            this.size = object.size;\n            this.type = object.type;\n            this.name = object.name;\n    }\n}\n\nexport class FileManager {\n    public options: FileManagerOptions;\n    \n    public set protocol(_protocol: any) {\n        this._protocol = _protocol;\n    }\n\n    public get id(): string {\n        return this._id;\n    }\n\n    public get progressPercent$(): any {\n        return Utils.asObservable(this._progress$);\n    }\n\n    public get progress$(): any {\n        return Utils.asObservable(this._speed$);\n    }\n\n    public get progress(): any {\n        return this._progress$.getValue();\n    }\n\n    public get element(): any {\n        return this._fileElement;\n    }\n\n    public get object(): FileObject {\n        return this._file;\n    }\n\n    public get name(): string {\n        return this._file.name;\n    }\n\n    public get type(): string {\n        return this._file.type;\n    }\n\n    public get date(): Date | null {\n        return this._file.lastModifiedDate;\n    }\n\n    public get size(): number | null  {\n        return this._file.size;\n    }\n\n    public get inQueue(): boolean {\n        return this._fileActive;\n    }\n\n    public get success(): boolean {\n        return this._isSuccess;\n    }\n\n    public get error(): boolean {\n        return this._isError;\n    }\n\n    private _id: string;\n    private _protocol: any;\n    private _uploader: Transfer;\n    private _fileElement: any;\n    private _file: FileObject;\n    private _speedDefault: any;\n\n    private _progress$: BehaviorSubject<number> = new BehaviorSubject(0);\n    private _speed$: BehaviorSubject<any> = new BehaviorSubject(speedObject);\n    private _isUploading: boolean;\n    private _isUploaded: boolean;\n    private _isSuccess: boolean;\n    private _isCancel: boolean;\n    private _isError: boolean;\n    private _imageLoad: boolean;\n    private _fileActive: boolean;\n\n    /**\n     * Creates an instance of FileManager.\n     * \n     * @param {*} _file\n     * @param {Transfer} [_uploader]\n     * @param {FileManagerOptions} [_options]\n     * \n     * @memberOf FileManager\n     */\n    constructor (_file: any, _options?: FileManagerOptions, _uploader?: Transfer) {\n        this.options = Object.assign({}, FileManagerOptionsDefault, _options);\n        this._speedDefault = {\n\n        };\n\n        this._id = Utils.uniqueID();\n\n        this._isUploading = false;\n        this._isUploaded = false;\n        this._isSuccess = false;\n        this._isCancel = false;\n        this._isError = false;\n\n        let isInput = Utils.isElement(_file);\n        let file = isInput ? new FileObject(_file.files[0]) : new FileObject(_file);\n\n        this._file = file;\n        this._fileElement = isInput ? _file.files[0] : _file;\n        this._fileActive = false;\n\n        if (typeof _uploader !== 'undefined') {\n            this.bindUploader(_uploader);\n        }\n    }\n\n    /**\n     * Bind uploader to FileManager\n     *\n     * @param {Transfer} _uploader\n     *\n     * @memberOf FileManager\n     */\n    public bindUploader (_uploader: Transfer): void {\n        if (this._uploader instanceof Transfer) {\n            this._uploader.removeFile(this);\n        }\n        this._uploader = _uploader;\n        let check = this._uploader.addFile(this);\n        this._setFileActive(check);\n    }\n\n    /**\n     * Bind options to FileManager\n     *\n     * @param {FileManagerOptions} _options\n     *\n     * @memberOf FileManager\n     */\n    public bindOptions (_options: FileManagerOptions): void {\n        this.options = Object.assign({}, this.options, _options);\n    }\n\n    /**\n     * Return uploader if exists else throw error\n     * \n     * @returns {Transfer}\n     * \n     * @memberOf FileManager\n     */\n    public getUploader (): Transfer {\n        if (this._uploader instanceof Transfer) {\n            return this._uploader;\n        }\n        throw new Error('Not uploader for this file defined.');\n    }\n\n    /**\n     * Start uploading this file\n     * \n     * \n     * @memberOf FileManager\n     */\n    public upload (): void {\n        let _uploader: Transfer;\n\n        try {\n            _uploader = this.getUploader();\n        } catch (e) {\n            throw new Error('Couldn`t upload because uploader was not defined. ERR_MSG: ' + (<Error>e).message);\n        }\n\n        this._isUploading = true;\n\n        try {\n            _uploader.uploadItem(this);\n        } catch (e) {\n            // TODO write error handling\n        }\n    }\n\n    /**\n     * Cancel upload process from this file\n     * \n     * \n     * @memberOf FileManager\n     */\n    public cancel (): void {\n        if (this._isUploading) {\n            let uploader = this.getUploader();\n            uploader.cancelUploadItem(this);\n        }\n    }\n\n    public _cancel(): void {\n        if (this._isUploading) {\n            this._isCancel = true;\n            this._isUploaded = false;\n            this._isUploading = false;\n        }\n    }\n\n    /**\n     * Remove this FileManger from uploader queue\n     * \n     * \n     * @memberOf FileManager\n     */\n    public remove (): void {\n        let _uploader: any;\n\n        try {\n            _uploader = this.getUploader();\n        } catch (e) {\n            throw new Error('Couldn`t remove because uploader was not defined. ERR_MSG: ' + (<Error>e).message);\n        }\n\n        (this._isUploading) && this.cancel();\n\n        _uploader.removeFile(this);\n        this._setFileActive(false);\n    }\n\n    public isUploaded (): boolean {\n        return this._isUploaded;\n    }\n\n    public isUploading (): boolean {\n        return this._isUploading;\n    }\n\n    public canUpload(): boolean {\n        return (!this._isUploaded && !this._isUploading && !this._isSuccess && !this._isError);\n    }\n\n    public handleImageLoad(): void {\n        this._imageLoad = true;\n    }\n\n    /**\n     * Overwrite functions\n     */\n\n    /**\n     * Callback\n     * @private\n     */\n    onBeforeUpload(): void { return; }\n\n    onProgressSpeed(speed: any): void { speed = speed; }\n\n    /**\n     * Callback\n     * @param {Number} progress\n     * @private\n     */\n    onProgress(progress: number): void { progress = progress; }\n    /**\n     * Callback\n     * @param {any} response\n     * @param {Number} status\n     * @param {Object} headers\n     */\n    onSuccess(response: any, status: number, headers: any): void { response = response; status = status; headers = headers;  }\n    onError(response: any, status: number, headers: any): void { response = response; status = status; headers = headers;  }\n\n    /**\n     *  Internal functions\n     */\n    _onBeforeUpload(): void {\n        this._isUploading = true;\n        this._isUploaded = false;\n        this._isSuccess = false;\n        this._isCancel = false;\n        this._isError = false;\n        this._progress$.next(0);\n        this.onBeforeUpload();\n    }\n\n    _onProgressFileSpeed (speed: any) {\n        this._speed$.next(speed);\n        this.onProgressSpeed(speed);\n    }\n\n    _onProgress (_progress: number): void {\n        this._progress$.next(_progress);\n        this.onProgress(_progress);\n    }\n\n    _onSuccess (response: any, status: number, headers: any): void {\n        if (this._uploader.options.removeBySuccess) {\n            this.remove();\n        }\n        this._isUploading = false;\n        this._isUploaded = true;\n        this._isSuccess = true;\n        this._isError = false;\n        this.onSuccess(response, status, headers);\n    }\n\n    _onError (response: any, status: number, headers: any): void {\n        this._isUploading = false;\n        this._isUploaded = false;\n        this._isSuccess = false;\n        this._isError = true;\n        this.onError(response, status, headers);\n    }\n\n    private _setFileActive(check: boolean): void {\n        this._fileActive = check;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./module/source/fileManager.core.ts","import { Protocol, ProtocolXHR } from './protocol.core';\nimport { Transfer } from './transfer.core';\nimport { FileManager } from './fileManager.core';\nimport { TransferOptions } from '../interface';\n\n// tslint:disable:max-line-length\n\nexport class FileUploader extends Transfer {\n    constructor (_options?: TransferOptions, _protocol?: Protocol) {\n        super('FileUploader', _options);\n\n        if (typeof _protocol === 'undefined') {\n            this._setProtocol( new ProtocolXHR() );\n\n            this._getProtocol()._progress.subscribe((obj: any) => {\n                let {\n                    _file,\n                    _data\n                } = obj;\n                if (_file instanceof FileManager) {\n                    this._onProgressFile(_file, _data.percent);\n                    this._onProgressFileSpeed(_file, _data);\n                }\n            });\n\n            this._getProtocol()._load.subscribe((obj: any) => {\n                let {\n                    _file,\n                    response,\n                    status,\n                    headers\n                } = obj;\n                if (_file instanceof FileManager) {\n                    let uploader: Transfer = _file.getUploader();\n                    let gist = this._isSuccessCode(status);\n                    let method = (g: boolean, f: FileManager, r: any, s: number, h: any) => { if (g) { uploader._onSuccessFile(f, r, s, h); } else { uploader._onErrorFile(f, r, s, h); } };\n                    method(gist, _file, response, status, headers);\n                    uploader._onCompleteFile(_file, response, status, headers);\n                }\n            });\n\n            this._getProtocol()._error.subscribe((obj: any) => {\n                let {\n                    _file,\n                    response,\n                    status,\n                    headers\n                } = obj;\n                if (_file instanceof FileManager) {\n                    let uploader: Transfer = _file.getUploader();\n                    uploader._onErrorFile(_file, response, status, headers);\n                    uploader._onCompleteFile(_file, response, status, headers);\n                }\n            });\n\n            this._getProtocol()._abort.subscribe((obj: any) => {\n                let {\n                    _file,\n                    response,\n                    status,\n                    headers\n                } = obj;\n                if (_file instanceof FileManager) {\n                    let uploader: Transfer = _file.getUploader();\n                    uploader._onErrorFile(_file, response, status, headers);\n                    uploader._onCompleteFile(_file, response, status, headers);\n                }\n            });\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./module/source/fileUploader.core.ts","export * from './fileManager.core';\nexport * from './fileUploader.core';\nexport * from './protocol.core';\nexport * from './transfer.core';\nexport * from './uploaderHook.core';\nexport * from './fileFilter.core';\nexport * from './utils.core';\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./module/source/index.ts","import { EventEmitter } from '@angular/core';\nimport { Utils } from './utils.core';\nimport { Transfer } from './transfer.core';\nimport { FileManager } from './fileManager.core';\nimport { FileSizePipe } from '../pipe/fileSizePipe.pipe';\n\n// tslint:disable:max-line-length\n\nlet {\n    FormData\n} = (<any>window);\n\n/**\n * Absractr proctol class if someone want to write his own protocol\n * \n * @export\n * @abstract\n * @class Protocol\n */\nexport abstract class Protocol {\n    _progress: EventEmitter<any>;\n    _load: EventEmitter<any>;\n    _error: EventEmitter<any>;\n    _abort: EventEmitter<any>;\n\n    public set connection(obj: any) {\n        let {\n            _file,\n            _connection\n        } = obj;\n        if (!this.isConnected(_file)) {\n            this._connections.push({\n                id: _file.id,\n                connection: _connection\n            });\n        }\n    }\n\n    private _id: string;\n    private _connections: any[];\n\n    /**\n     * Creates an instance of Protocol and for each protocol an own unique ID.\n     * \n     * \n     * @memberOf Protocol\n     */\n    constructor () {\n        this._id = Utils.uniqueID();\n        this._progress = new EventEmitter<any>();\n        this._load = new EventEmitter<any>();\n        this._error = new EventEmitter<any>();\n        this._abort = new EventEmitter<any>();\n        this._connections = [];\n    }\n\n    /**\n     * Call uploader method _onCompleteFile.\n     * \n     * @param {FileManager} _file\n     * @param {any} response\n     * @param {any} status\n     * @param {any} headers\n     * \n     * @memberOf Protocol\n     */\n    public _onLoad (_file: FileManager, response: any, status: number, headers: any): void {\n        let uploader: Transfer = _file.getUploader();\n        let gist = this._isSuccessCode(status);\n        let method = (g: boolean, f: FileManager, r: any, s: number, h: any) => { if (g) { uploader._onSuccessFile(f, r, s, h); } else { uploader._onErrorFile(f, r, s, h); } };\n        method(gist, _file, response, status, headers);\n        uploader._onCompleteFile(_file, response, status, headers);\n    }\n\n    /**\n     * Call uploader methodes _onErrorFile and _onCompleteFile.\n     * \n     * @param {FileManager} _file\n     * @param {any} response\n     * @param {any} status\n     * @param {any} headers\n     * \n     * @memberOf Protocol\n     */\n    public _onError (_file: FileManager, response: any, status: number, headers: any): void {\n        let uploader: Transfer = _file.getUploader();\n        uploader._onErrorFile(_file, response, status, headers);\n        uploader._onCompleteFile(_file, response, status, headers);\n    }\n\n    /**\n     * Call uploader methodes _onErrorFile and _onCompleteFile.\n     * \n     * @param {FileManager} _file\n     * @param {any} response\n     * @param {any} status\n     * @param {any} headers\n     * \n     * @memberOf Protocol\n     */\n    public _onAbort (_file: FileManager, response: any, status: number, headers: any): void {\n        let uploader: Transfer = _file.getUploader();\n        uploader._onErrorFile(_file, response, status, headers);\n        uploader._onCompleteFile(_file, response, status, headers);\n    }\n\n    /**\n     * Validate response status code.\n     * \n     * @param {number} status\n     * @returns {boolean}\n     * \n     * @memberOf Protocol\n     */\n    public _isSuccessCode(status: number): boolean {\n         return (status >= 200 && status < 300) || status === 304;\n    }\n\n    public isConnected(_file: FileManager): any {\n        for (let _request of this._connections) {\n            if (_request.id === _file.id) {\n                return _request;\n            }\n        }\n        return false;\n    }\n\n    public removeConnection(_file: FileManager): void {\n        let _request: any | null = null;\n        for (let _key in this._connections) {\n            if ( this._connections.hasOwnProperty( _key ) ) {\n                _request = this._connections[_key];\n                if (_file.id === _request.id) {\n                    this._connections.splice(+_key, 1);\n                }\n            }\n        }\n    }\n\n    /**\n     * Must be implemented at each protocol class.\n     * \n     * @abstract\n     * @param {FileManager} _file\n     * \n     * @memberOf Protocol\n     */\n    abstract run(_file: FileManager): any;\n    abstract cancel(_file: FileManager): void;\n}\n\n/**\n * Standard protocol for server communication (file uploading)\n * \n * @export\n * @class ProtocolXHR\n * @extends {Protocol}\n */\nexport class ProtocolXHR extends Protocol {\n    constructor () {\n        super();\n    }\n\n    /**\n     * Implementation of the abstract.protocol method `run`\n     * \n     * @param {FileManager} _file\n     * \n     * @memberOf ProtocolXHR\n     */\n    public run (_file: FileManager): void {\n        let _xhr: XMLHttpRequest;\n        let sendable: any;\n        let uploader: Transfer = _file.getUploader();\n\n        let _formData = Utils.extendValue(uploader.options.formData, _file.options.formData);\n        let _withCredentials = Utils.extendValue(uploader.options.withCredentials, _file.options.withCredentials);\n        let _method = Utils.extendValue(uploader.options.method, _file.options.method);\n        let _url = Utils.extendValue(uploader.options.url, _file.options.url);\n        let _alias = Utils.extendValue(uploader.options.alias, _file.options.alias);\n        let _headers = Utils.extendValue(uploader.options.headers, _file.options.headers);\n\n        let time: number = new Date().getTime();\n        let load = 0;\n        let speed = 0;\n        let sppedToText: string|null = null;\n        let $filesize = new FileSizePipe();\n\n        _xhr = new XMLHttpRequest();\n\n        this.connection = {\n            _file: _file,\n            _connection: _xhr\n        };\n\n        sendable = new FormData();\n\n        if (typeof _formData !== 'undefined') {\n            // Only allow Multipart\n            for (let obj of _formData) {\n                for (let key in obj) {\n                    if ( obj.hasOwnProperty( key ) ) {\n                        let value = obj[key];\n                        sendable.append(key, value);\n                    }\n                }\n            }\n        }\n\n        sendable.append(_alias, _file.element, _file.name);\n\n        if (typeof(_file.size) !== 'number') {\n            throw new TypeError('We need the file size.');\n        }\n\n        _xhr.upload.addEventListener('progress', (event: ProgressEvent) => {\n            if (event.lengthComputable) {\n                let _time = new Date().getTime() - time;\n                load = event.loaded - load;\n                speed = load / _time * 1000;\n                speed = parseInt(<any>speed, 10);\n                sppedToText = $filesize.transform(speed);\n                let _obj = {\n                    total: event.total,\n                    loaded: event.loaded,\n                    percent: Math.round(event.loaded / event.total * 100),\n                    speed: speed,\n                    speedToText: sppedToText\n                };\n                this._progress.emit({_file: _file, _data: _obj});\n            }\n        });\n        _xhr.addEventListener('load', () => {\n            let headers = uploader._parseHeaders(_xhr.getAllResponseHeaders());\n            let response = uploader._transformResponse(_xhr.response, headers);\n            console.log('File upload done');\n            let status = _xhr.status;\n            this._load.emit({_file: _file, response: response, status: status, headers: headers});\n        });\n        _xhr.addEventListener('error', () => {\n            let headers = uploader._parseHeaders(_xhr.getAllResponseHeaders());\n            let response = uploader._transformResponse(_xhr.response, headers);\n            console.log('File upload error');\n            let status = _xhr.status;\n            this._error.emit({_file: _file, response: response, status: status, headers: headers});\n        });\n        _xhr.addEventListener('abort', () => {\n            let headers = uploader._parseHeaders(_xhr.getAllResponseHeaders());\n            let response = uploader._transformResponse(_xhr.response, headers);\n            console.log('File upload abort');\n            let status = _xhr.status;\n            this._abort.emit({_file: _file, response: response, status: status, headers: headers});\n        });\n\n        _xhr.open(_method, _url, true);\n\n        _xhr.withCredentials = _withCredentials;\n\n        for (let name in _headers) {\n            if ( _headers.hasOwnProperty( name ) ) {\n                let value = _headers[name];\n                _xhr.setRequestHeader(name, value);\n            }\n        }\n\n        _xhr.send(sendable);\n    }\n\n    public cancel(_file: FileManager) {\n        let _request = this.isConnected(_file);\n        if (!!_request) {\n            _request.connection.abort();\n            this.removeConnection(_file);\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./module/source/protocol.core.ts","import { BehaviorSubject } from 'rxjs/Rx';\nimport { Utils } from './utils.core';\nimport { FileManager } from './fileManager.core';\nimport { Protocol } from './protocol.core';\nimport { hookType, UploaderHook } from './uploaderHook.core';\nimport { FileFilter } from './fileFilter.core';\nimport { FileManagerOptions, TransferOptions } from '../interface';\n\n// tslint:disable:no-unused-expression\n\nconst TransferOptionsDefault: TransferOptions = {\n    url: '',\n    alias: 'file',\n    headers: {},\n    filters: [],\n    formData: [],\n    autoUpload: false,\n    method: 'POST',\n    removeBySuccess: false,\n    queueLimit: -1,\n    enableCors: false,\n    withCredentials: false,\n    uniqueFiles: false\n};\n\n/**\n * An abstract class for the transport functionality\n * \n * @export\n * @abstract\n * @class Transfer\n */\nexport abstract class Transfer {\n    public options: TransferOptions;\n\n    public get id (): any {\n        return this._id;\n    }\n\n    public get queue$ (): any {\n        return Utils.asObservable(this._queue$);\n    }\n\n    public get queueObs (): FileManager[] {\n        return this._queue$.getValue();\n    }\n\n    private _id: string;\n    private _queue$: BehaviorSubject<FileManager[]> = new BehaviorSubject( [] );\n    private _hooks: UploaderHook[];\n\n    private _isHTML5: Boolean;\n    private _isDragAndDrop: Boolean;\n\n    private _protocol: Protocol;\n\n    /**\n     * Creates an instance of Transfer.\n     * \n     * @param {string} type\n     * \n     * @memberOf Transfer\n     */\n    constructor (public type: string, _options?: TransferOptions) {\n        let div = document.createElement( 'div' );\n        this._isHTML5 = !!(File && FormData && FileReader);\n        this._isDragAndDrop = ( ( 'draggable' in div ) || ( 'ondragstart' in div && 'ondrop' in div ) ) ? true : false;\n        this._id = Utils.uniqueID();\n        this._hooks = [];\n\n        if (!this._isHTML5) {\n            throw new Error(`Your browser doesn't support HTML5. Our FileUploader can't work here.`);\n        }\n\n        this.options = Object.assign({}, TransferOptionsDefault, _options);\n    }\n\n    /**\n     * Bind options to FileManager\n     * \n     * @param {FileManagerOptions} _options\n     * \n     * @memberOf FileManager\n     */\n    public bindOptions (_options: TransferOptions): void {\n        this.options = Object.assign({}, this.options, _options);\n    }\n\n    /**\n     * It gives HTML5 check back\n     * \n     * @returns {Boolean}\n     * \n     * @memberOf Transfer\n     */\n    public isHTML5 (): Boolean {\n        return this._isHTML5;\n    }\n\n    /**\n     * It gives DragAndDrop check back\n     * \n     * @returns {Boolean}\n     * \n     * @memberOf Transfer\n     */\n    public isDragAndDrop (): Boolean {\n        return this._isDragAndDrop;\n    }\n\n    /**\n     * To implement a hock\n     * \n     * @param {UploaderHook} hook\n     * \n     * @memberOf Transfer\n     */\n    public hook ( _hook: UploaderHook ) {\n        if ( this.hookExists(_hook) === -1 ) {\n            this._hooks.push(_hook);\n            this._hooks.sort( (a, b) => {\n                if ( !(a.type) || !(b.type) ) {\n                    return 0;\n                }\n                if (a.type !== b.type) {\n                    if (a.type < b.type) {\n                        return -1;\n                    }\n                    if (a.type > b.type) {\n                        return 1;\n                    }\n                    return 0;\n                } else {\n                    if ( !(a.priority) || !(b.priority) ) {\n                        return 0;\n                    }\n                    if (a.priority > b.priority) {\n                        return -1;\n                    }\n                    if (a.priority < b.priority) {\n                        return 1;\n                    }\n                    return 0;\n                }\n            });\n        }\n    }\n\n    /**\n     * \n     * \n     * @param {UploaderHook} hook\n     * @returns this\n     * \n     * @memberOf Transfer\n     */\n    public removeHook ( _hook: UploaderHook ): boolean {\n        let key = this.hookExists(_hook);\n        if ( key >= 0 ) {\n            this._hooks.splice(key, 1);\n            return true;\n        }\n        return false;\n    }\n\n    public addFilesToQueue (_files: any, options?: FileManagerOptions): FileManager[] {\n        let _retFiles: FileManager[] = [];\n        let _dummyFile: FileManager;\n        let _check = false;\n\n        if (Utils.isElement(_files)) {\n            // If _files was not converted\n            for (let _fileElement of _files.files) {\n                try {\n                    _dummyFile = new FileManager(_fileElement, options, this);\n                } catch (e) {\n                    throw Error(`Couldn't create a new FileManager object.`);\n                }\n                _check = this.addFile(_dummyFile);\n                (_check) && _retFiles.push(_dummyFile);\n            }\n        } else if (_files instanceof Object) {\n            // If _files is an array of FileManger\n            if ( (typeof _files[0] !== 'undefined') && (_files[0] instanceof FileManager) ) {\n                for (let _file of _files) {\n                    _check = this.addFile(_file);\n                    (_check) && _retFiles.push(_file);\n                }\n            // If _files is only a FileManger\n            } else if (_files instanceof FileManager) {\n                _check = this.addFile(_files);\n                (_check) && _retFiles.push(_files);\n            } else {\n                throw new Error(`Couldn't put file/files to the queue. [${_files}]`);\n            }\n        } else {\n            throw new Error(`Couldn't initialise FileUploader file/files are not defined. [${_files}]`);\n        }\n        this._onAddFileAll();\n        return _retFiles;\n    }\n\n    public addFile (_file: FileManager): boolean {\n        try {\n            this.validate(_file);\n        } catch (e) {\n            console.log(e.message);\n            this._onAddFileError(_file);\n            return false;\n        }\n\n        let queue = this._queue$.getValue();\n        if (this.options.uniqueFiles) {\n            if (this.notInQueue(_file) === -1) {\n                this._runHook(hookType.beforeAddingFile, _file);\n                queue.push(_file);\n                this._queue$.next( queue );\n                this._onAddFile(_file);\n                this._runHook(hookType.afterAddingFile, _file);\n                (this.options.autoUpload) && _file.upload();\n                return true;\n            }\n        } else {\n            this._runHook(hookType.beforeAddingFile, _file);\n            queue.push(_file);\n            this._queue$.next( queue );\n            this._onAddFile(_file);\n            this._runHook(hookType.afterAddingFile, _file);\n            (this.options.autoUpload) && _file.upload();\n            return true;\n        }\n        this._onAddFileError(_file);\n        return false;\n    }\n\n    public removeFile (_file: FileManager): boolean {\n        let key = this.notInQueue(_file);\n        let queue = this._queue$.getValue();\n        if (key >= 0) {\n            queue.splice(key, 1);\n            this._queue$.next( queue );\n            return true;\n        }\n        return false;\n    }\n\n    public notInQueue (_file: FileManager ): number {\n        let queue = this._queue$.getValue();\n        for (let key in queue) {\n            if ( queue.hasOwnProperty( key ) ) {\n                let obj = queue[key];\n                if (\n                    (obj.id === _file.id) ||\n                    ( (obj.name + obj.type + obj.size) ===\n                        (_file.name + _file.type + _file.size) )\n                ) {\n                    return +key;\n                }\n            }\n        }\n        return -1;\n    }\n\n    public addFilter (_filter: FileFilter): void {\n        if (this.filterExists(_filter) !== -1) {\n            (<FileFilter[]>this.options.filters).push(_filter);\n        }\n    }\n\n    public validate (_file: FileManager) {\n        for (let _filter of (<FileFilter[]>this.options.filters)) {\n            if (!_filter.validate(_file)) {\n                throw new Error(`File [${_file.name}] doesn't fit with filter [${_filter.name}]`);\n            }\n        }\n        return true;\n    }\n\n    public _setProtocol (_protocol: Protocol) {\n        this._protocol = _protocol;\n    }\n\n    public _getProtocol (): Protocol {\n        return this._protocol;\n    }\n\n     /**\n      * Validate response status code.\n      * \n      * @param {number} status\n      * @returns {boolean}\n      * \n      * @memberOf Protocol\n      */\n     public _isSuccessCode(status: number): boolean {\n         return (status >= 200 && status < 300) || status === 304;\n     }\n\n    /**\n     * Upload functions\n     */\n    public upload () {\n        this._onBeforeUploadAll();\n        for (let _file of this.queueObs) {\n            this.uploadItem(_file);\n        }\n    }\n    public cancel () {\n        for (let _file of this.queueObs) {\n            this.cancelUploadItem(_file);\n        }\n    }\n    public remove () {\n        for (let _file of this.queueObs) {\n            this.removeFile(_file);\n        }\n    }\n    public uploadItem (item: FileManager) {\n        if (this.notInQueue(item) === -1) {\n            this.addFile(item);\n        }\n        this._onBeforeUpload(item);\n        this._getProtocol().run(item);\n    }\n    public cancelUploadItem (item: FileManager) {\n        if (this.notInQueue(item) === -1) {\n            return;\n        }\n        (item.isUploading) && this._getProtocol().cancel(item);\n        (item.isUploading) && item._cancel();\n    }\n\n    /**\n     * Overwrite functions\n     */\n\n    onAddFileAll(_uploader: Transfer): void { return; }\n    onAddFile(_file: FileManager): void { return; }\n    onAddFileError(_file: FileManager): void { return; }\n    onBeforeUploadAll(_uploader: Transfer): void { return; }\n    onBeforeUpload(_file: FileManager): void { return; }\n    onProgress(_uploader: Transfer, _progress: any): void { return; }\n    onProgressFile(_file: FileManager, _progress: number): void { return; }\n    onProgressFileSpeed(_file: FileManager, _progress: any): void { return; }\n    onSuccess(_file: FileManager, _response: any, _status: number, _headers: any): void { return; }\n    onError(_file: FileManager, _response: any, _status: number, _headers: any): void { return; }\n    onComplete(_file: FileManager, _response: any, _status: number, _headers: any): void { return; }\n    onCompleteAll(_uploader: Transfer): void { return; };\n\n    /**\n     * Internal functions\n     */\n\n    /**\n     * \n     * \n     * @param {FileManager} _file\n     * @param {number} _progress\n     * @returns {void}\n     * \n     * @memberOf FileManager\n     */\n    _onAddFileAll(): void {\n        this.onAddFileAll(this);\n    }\n    _onAddFile(_file: FileManager): void {\n        this.onAddFile(_file);\n    }\n    _onAddFileError(_file: FileManager): void {\n        this._runHook(hookType.errorAddingFile, _file);\n        this.onAddFileError(_file);\n    }\n    _onBeforeUploadAll(): void {\n        this._runHook(hookType.prepareUploadAll, this);\n        this.onBeforeUploadAll(this);\n    }\n    _onBeforeUpload(_file: FileManager): void {\n        this._runHook(hookType.prepareUploadFile, _file);\n        _file._onBeforeUpload();\n        this.onBeforeUpload(_file);\n    }\n    _onProgressFileSpeed(_file: FileManager, _speed: any): void {\n        this._runHook(hookType.prepareUploadFile, _file, _speed);\n        _file._onProgressFileSpeed(_speed);\n        this.onProgressFileSpeed(_file, _speed);\n    }\n    _onProgressFile(_file: FileManager, _progress: number): void {\n        _file._onProgress(_progress);\n        this.onProgressFile(_file, _progress);\n        this._onProgress();\n     }\n    _onProgress(): void {\n        let queue: FileManager[] = this._queue$.getValue();\n        if (queue.length > 0) {\n            let percent = 0;\n            for (let file of queue) {\n                if (file.success || file.error) {\n                    percent += 100;\n                } else if (file.isUploading) {\n                    percent += file.progress;\n                }\n            }\n            percent = Math.floor(percent / queue.length);\n            this._runHook(hookType.progressUploadAll, percent);\n            this.onProgress(this, percent);\n            (percent >= 100) && this._onCompleteAll();\n            return;\n        }\n        this.onProgress(this, 100);\n        this._onCompleteAll();\n     }\n     _onSuccessFile(_file: FileManager, response: any, status: number, headers: any): void {\n        this._runHook(hookType.successUploadFile, _file, response, status, headers);\n        _file._onSuccess(response, status, headers);\n        this.onSuccess(_file, response, status, headers);\n     }\n     _onErrorFile(_file: FileManager, response: any, status: number, headers: any): void {\n        this._runHook(hookType.failedUploadFile, _file, response, status, headers);\n        this.onError(_file, response, status, headers);\n     }\n     _onCompleteFile(_file: FileManager, response: any, status: number, headers: any): void {\n        this._runHook(hookType.completeUploadFile, _file, response, status, headers);\n        this._onProgress();\n        this.onComplete(_file, response, status, headers);\n     }\n     _onCompleteAll(): void {\n        this._runHook(hookType.completeUploadAll, this);\n        this.onCompleteAll(this);\n     }\n\n    _headersGetter(parsedHeaders: any) {\n        return (name: any) => {\n            if (name) {\n                return parsedHeaders[name.toLowerCase()] || null;\n            }\n            return parsedHeaders;\n        };\n    }\n    _parseHeaders(headers: any): any {\n        let parsed: any = {}, key: any, val: any, i: any;\n\n        if (!headers) { return parsed; }\n\n        let incomeHeaders = headers.split('\\n');\n        for (let line of incomeHeaders) {\n            i = line.indexOf(':');\n            key = line.slice(0, i).trim().toLowerCase();\n            val = line.slice(i + 1).trim();\n\n            if (key) {\n                parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n            }\n        }\n\n        return parsed;\n    }\n    _transformResponse(response: any, headers: any): void {\n        headers = {};\n        return response;\n    }\n\n    _runHook(type: hookType, ...args: any[]): void {\n        for (let key in this._hooks) {\n            if ( this._hooks.hasOwnProperty( key ) ) {\n                let obj = this._hooks[key];\n                if (obj.type === type) {\n                    switch (type) {\n                        case hookType.beforeAddingFile:\n                        case hookType.prepareUploadAll:\n                        case hookType.prepareUploadFile:\n                        case hookType.afterAddingFile:\n                        case hookType.errorAddingFile:\n                        case hookType.completeUploadAll:\n                        case hookType.progressUploadAll: {\n                            (<Function>obj.callback)(args[0]);\n                        }break;\n\n                        case hookType.progressUploadFile: {\n                            (<Function>obj.callback)(args[0], args[1]);\n                        }break;\n\n                        case hookType.cancelUploadFile:\n                        case hookType.successUploadFile:\n                        case hookType.failedUploadFile:\n                        case hookType.completeUploadFile: {\n                            (<Function>obj.callback)(args[0], args[1], args[2], args[3]);\n                        }break;\n\n                        default: {\n                            throw new Error(`hookType unknown or not defined`);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * \n     * \n     * @private\n     * @param {UploaderHook} hook\n     * @returns {Boolean}\n     * \n     * @memberOf Transfer\n     */\n    private hookExists ( hook: UploaderHook ): number {\n        for (let key in this._hooks) {\n            if ( this._hooks.hasOwnProperty( key ) ) {\n                let obj = this._hooks[key];\n                if (\n                    (obj.type === hook.type) && ('' + obj.callback === '' + hook.callback)\n                ) {\n                    return +key;\n                }\n            }\n        }\n        return -1;\n    }\n\n    private filterExists (_filter: FileFilter): number {\n        let filters = <FileFilter[]>this.options.filters;\n        for (let key in filters) {\n            if ( filters.hasOwnProperty( key ) ) {\n                let obj = filters[key];\n                if ( obj.name === _filter.name ) {\n                    return +key;\n                }\n            }\n        }\n        return -1;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./module/source/transfer.core.ts","export enum hookType {\n    beforeAddingFile,\n    afterAddingFile,\n    errorAddingFile,\n\n    prepareUploadFile,\n    progressUploadFile,\n    successUploadFile,\n    completeUploadFile,\n    failedUploadFile,\n    cancelUploadFile,   // not implemented right now\n\n    prepareUploadAll,   // not implemented right now\n    progressUploadAll,  // not implemented right now\n    completeUploadAll\n}\n\nexport class UploaderHook {\n    public get type (): hookType | null {\n        return this._type;\n    }\n\n    public get priority (): number | null {\n        return this._priority;\n    }\n\n    public get callback(): Function | null {\n        return this._callback;\n    }\n\n    private _type: hookType | null = null;\n    private _callback: Function | null = null;\n    private _priority: number | null = null;\n\n    constructor (_hookType: hookType, _callback: Function, _priority = 0) {\n        this._type = _hookType;\n        this._callback = _callback;\n        this._priority = +_priority;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./module/source/uploaderHook.core.ts","import { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\n\nexport class Utils {\n    static _uniqueNumber: number = 1;\n\n    static nextUID = (): string => (Utils._uniqueNumber++).toString();\n    /**\n     * Creates a unique id for submit form.\n     * \n     * @static\n     * @returns\n     * \n     * @memberOf utils\n     */\n    static uniqueID () {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            // tslint:disable-next-line:no-bitwise\n            let r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    }\n\n    /**\n     * Validate input and returns true if input is an element\n     * \n     * @static\n     * @param {*} _input\n     * @returns {boolean} True if `value` is a DOM element (or wrapped jQuery element).\n     * \n     * @memberOf FileManager\n     */\n    static isElement (_input: any) {\n        return !!( _input &&\n        ( _input.nodeName || // we are a direct element\n        (_input.prop && _input.attr && _input.find) ) ); // We have an on and find methode part of jQuery API\n    }\n\n    /**\n     * Validate input and returns true if input is a string\n     * \n     * @static\n     * @param {*} _input\n     * @returns {boolean}\n     * \n     * @memberOf Utils\n     */\n    static isString (_input: any) {\n        return !!(typeof _input === 'string');\n    }\n\n    static extendValue (...args: any[]) {\n        let _value: any = args[0];\n        for (let i = 1; i < args.length; i++) {\n            if (typeof args[i] !== 'undefined') {\n                _value = args[i];\n            }\n        }\n        return _value;\n    }\n\n    static asObservable (subject: Subject<any>) {\n        return new Observable((fn: any) => subject.subscribe(fn));\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./module/source/utils.core.ts"],"sourceRoot":""}